#line 2 "get_stmt_type.yy.cc"

#line 4 "get_stmt_type.yy.cc"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer yyFlexLexer

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */
#include <iostream>
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern int yyleng;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{

	std::streambuf* yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

#define yytext_ptr yytext
#define YY_INTERACTIVE

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;
#define YY_NUM_RULES 18
#define YY_END_OF_BUFFER 19
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[1900] =
    {   0,
        0,    0,   19,   17,   15,   16,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   15,   15,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    6,    6,    6,    6,    6,    6,    0,
        6,    6,    6,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    6,    6,    0,    0,

        0,    0,    0,    6,    6,    6,    6,   14,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   13,    0,    0,    0,    6,
        6,    6,    6,    6,    6,    0,    6,    6,    6,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    6,    6,    6,
        6,    6,    6,    0,    6,    6,    6,    6,    6,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    6,    6,    0,    0,    0,
        0,    0,    6,    6,    6,    6,    0,    0,    0,    7,

        7,    7,    7,    7,    7,    0,    7,    7,    7,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    6,    6,    0,
        0,    0,    0,    0,    6,    6,    6,    6,    6,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    6,    6,    6,
        6,    6,    6,    0,    6,    6,    6,    6,    6,    7,
        7,    0,    0,    0,    0,    0,    0,    7,    7,    7,

        7,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    6,    6,    6,    6,    6,    6,
        0,    6,    6,    6,    6,    6,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    6,    6,
        0,    0,    0,    0,    0,    6,    6,    6,    6,    6,
        0,    0,    0,    0,    0,    0,    0,    7,    7,    7,
        7,    7,    7,    0,    7,    7,    7,    7,    0,    0,

        6,    6,    6,    6,    6,    6,    0,    6,    6,    6,
        7,    0,    0,    8,    8,    8,    8,    8,    8,    0,
        8,    8,    8,    0,    0,    0,    9,    9,    9,    9,
        9,    9,    0,    9,    9,    9,    0,    0,   11,   11,
       11,   11,   11,   11,    0,   11,   11,   11,    0,    0,
        2,    2,    2,    2,    2,    2,    0,    2,    2,    2,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   12,    0,
        0,    0,    6,    6,    6,    6,    6,    6,    0,    6,
        6,    6,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    6,    6,    0,    0,    0,    0,    6,
        6,    6,    6,    6,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        6,    6,    0,    0,    0,    0,    0,    7,    7,    0,
        0,    0,    0,    0,    7,    7,    7,    7,    6,    6,
        0,    0,    0,    0,    0,    6,    6,    6,    6,    7,
        8,    8,    0,    0,    0,    0,    0,    0,    8,    8,
        8,    8,    0,    9,    9,    0,    0,    0,    0,    0,
        0,    9,    9,    9,    9,   11,   11,    0,    0,    0,
        0,    0,    0,   11,   11,   11,   11,    2,    2,    0,

        0,    0,    0,    0,    2,    2,    2,    2,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    6,    6,    0,    0,    0,
        0,    0,    6,    6,    6,    6,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        6,    6,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    6,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    7,    7,    7,    7,    7,    7,    0,
        7,    7,    7,    7,    7,    0,    0,    0,    0,    0,
        0,    0,    6,    6,    6,    6,    6,    6,    0,    6,

        6,    6,    6,    6,    0,    0,    0,    0,    0,    0,
        0,    8,    8,    8,    8,    8,    8,    0,    8,    8,
        8,    8,    0,    0,    6,    6,    6,    6,    6,    6,
        0,    6,    6,    6,    8,    0,    0,   10,   10,   10,
       10,   10,   10,    0,   10,   10,   10,    0,    0,    0,
        0,    0,    0,    0,    9,    9,    9,    9,    9,    9,
        0,    9,    9,    9,    9,    0,    0,    6,    6,    6,
        6,    6,    6,    0,    6,    6,    6,    9,    0,    0,
        0,    0,    0,    0,    0,   11,   11,   11,   11,   11,
       11,    0,   11,   11,   11,   11,    0,    0,    6,    6,

        6,    6,    6,    6,    0,    6,    6,    6,   11,    0,
        0,    0,    0,    0,    0,    0,    2,    2,    2,    2,
        2,    2,    0,    2,    2,    2,    2,    2,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    6,    6,
        6,    6,    6,    6,    0,    6,    6,    6,    6,    6,
        0,    0,    0,    2,    0,    1,    0,    0,    0,    0,
        0,    0,    0,    0,    6,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    7,    7,    0,    0,    0,    0,

        7,    7,    7,    7,    7,    0,    0,    0,    0,    0,
        6,    6,    0,    0,    0,    0,    6,    6,    6,    6,
        6,    0,    0,    0,    0,    0,    8,    8,    0,    0,
        0,    0,    0,    8,    8,    8,    8,    6,    6,    0,
        0,    0,    0,    0,    6,    6,    6,    6,    8,   10,
       10,    0,    0,    0,    0,    0,    0,   10,   10,   10,
       10,    0,    0,    0,    0,    0,    9,    9,    0,    0,
        0,    0,    0,    9,    9,    9,    9,    6,    6,    0,
        0,    0,    0,    0,    6,    6,    6,    6,    9,    0,
        0,    0,    0,    0,   11,   11,    0,    0,    0,    0,

        0,   11,   11,   11,   11,    6,    6,    0,    0,    0,
        0,    0,    6,    6,    6,    6,   11,    0,    0,    0,
        0,    0,    2,    2,    0,    0,    0,    0,    0,    2,
        2,    2,    2,    2,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    6,    6,
        0,    0,    0,    0,    0,    6,    6,    6,    6,    6,
        0,    2,    2,    1,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    7,    7,    0,    0,    0,
        0,    0,    0,    0,    6,    6,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    8,    8,    8,    8,    8,
        8,    0,    8,    8,    8,    8,    8,    0,    0,    0,
        0,    0,    0,    0,    6,    6,    6,    6,    6,    6,
        0,    6,    6,    6,    6,    6,    0,    0,    0,    0,
        0,    0,    0,   10,   10,   10,   10,   10,   10,    0,
       10,   10,   10,   10,    0,    0,    6,    6,    6,    6,
        6,    6,    0,    6,    6,    6,   10,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    9,    9,    9,    9,
        9,    9,    0,    9,    9,    9,    9,    9,    0,    0,
        0,    0,    0,    0,    0,    6,    6,    6,    6,    6,

        6,    0,    6,    6,    6,    6,    6,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   11,   11,   11,   11,
       11,   11,    0,   11,   11,   11,   11,   11,    0,    0,
        0,    0,    0,    0,    0,    6,    6,    6,    6,    6,
        6,    0,    6,    6,    6,    6,    6,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    2,    2,    2,    2,
        2,    2,    0,    2,    2,    2,    2,    2,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    3,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    6,    6,

        0,    0,    0,    0,    0,    0,    0,    7,    0,    0,
        0,    0,    0,    6,    0,    0,    0,    0,    0,    8,
        8,    0,    0,    0,    0,    8,    8,    8,    8,    8,
        0,    0,    0,    0,    0,    6,    6,    0,    0,    0,
        0,    6,    6,    6,    6,    6,    0,    0,    0,    0,
        0,   10,   10,    0,    0,    0,    0,    0,   10,   10,
       10,   10,    6,    6,    0,    0,    0,    0,    0,    6,
        6,    6,    6,   10,    0,    0,    0,    0,    0,    9,
        9,    0,    0,    0,    0,    9,    9,    9,    9,    9,
        0,    0,    0,    0,    0,    6,    6,    0,    0,    0,

        0,    6,    6,    6,    6,    6,    0,    0,    0,    0,
        0,   11,   11,    0,    0,    0,    0,   11,   11,   11,
       11,   11,    0,    0,    0,    0,    0,    6,    6,    0,
        0,    0,    0,    6,    6,    6,    6,    6,    0,    0,
        0,    0,    0,    2,    2,    0,    0,    0,    0,    2,
        2,    2,    2,    2,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    6,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    8,    8,    0,    0,    0,    0,    0,    0,

        0,    6,    6,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   10,   10,   10,   10,   10,   10,    0,   10,
       10,   10,   10,   10,    0,    0,    0,    0,    0,    0,
        0,    6,    6,    6,    6,    6,    6,    0,    6,    6,
        6,    6,    6,    0,    0,    0,    0,    0,    0,    0,
        9,    9,    0,    0,    0,    0,    0,    0,    0,    6,
        6,    0,    0,    0,    0,    0,    0,    0,   11,   11,
        0,    0,    0,    0,    0,    0,    0,    6,    6,    0,
        0,    0,    0,    0,    0,    0,    2,    2,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    4,    4,    4,    4,
        4,    4,    0,    4,    4,    4,    0,    0,    0,    0,
        0,    8,    0,    0,    0,    0,    0,    6,    0,    0,
        0,    0,    0,   10,   10,    0,    0,    0,    0,   10,
       10,   10,   10,   10,    0,    0,    0,    0,    0,    6,
        6,    0,    0,    0,    0,    6,    6,    6,    6,    6,
        0,    0,    0,    0,    0,    9,    0,    0,    0,    0,
        0,    6,    0,    0,    0,    0,    0,   11,    0,    0,
        0,    0,    0,    6,    0,    0,    0,    0,    0,    2,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        5,    5,    5,    5,    5,    5,    0,    5,    5,    5,
        4,    4,    0,    0,    0,    0,    4,    4,    4,    4,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   10,   10,    0,    0,    0,    0,    0,    0,    0,
        6,    6,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    5,    5,    0,    0,    0,    0,

        5,    5,    5,    5,    0,    0,    0,    0,    0,    4,
        4,    0,    0,    0,    0,    0,   10,    0,    0,    0,
        0,    0,    6,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    5,    5,    0,
        0,    0,    0,    0,    4,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    5,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    3,    0,    3,    0

    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    1,    1,    5,    1,    1,    6,    1,
        1,    7,    8,    1,    9,   10,    1,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,    1,    1,   12,
       13,   14,    1,    1,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       16,    1,   17,   18,   19,    1,   20,   21,   22,   23,

       24,   25,   15,   26,   27,   15,   15,   28,   15,   29,
       30,   31,   15,   32,   33,   34,   15,   35,   36,   15,
       37,   15,   38,    1,   39,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const YY_CHAR yy_meta[40] =
    {   0,
        1,    2,    1,    1,    1,    3,    1,    1,    1,    1,
        4,    1,    5,    1,    6,    1,    1,    1,    6,    6,
        6,    6,    6,    6,    6,    6,    6,    6,    6,    6,
        6,    6,    6,    6,    6,    6,    6,    1,    1
    } ;

static const flex_int16_t yy_base[2655] =
    {   0,
        0,    0, 6473, 7384, 6469, 7384, 6448, 6462, 6441,   38,
       39,   40,   41,   42,   43,   44, 7384, 6454, 6420,   45,
     6446, 6444, 6424,   46,   47, 6439,   49,   51,   50,   52,
     6406, 6432,   48,   53,   81,   55,   96,   58,   95, 6410,
      122,   57, 6424, 6409,   50, 6416,   62,  119,  125,  158,
     6414, 6394,  137,  159,  160,  161,  164,  162, 6393,  168,
     6369, 6389,  163, 6396,   76,  165,  166,  170, 6392, 6371,
      171,  174,  182, 6386,  175, 6383, 6379,  187,  190,  197,
      215, 6366,  252, 6371, 6368,  184,  210,  183,  192,  185,
      198, 6364,  289, 6360, 6356, 6338, 6354, 6351,  286,  287,

      288,  307, 6340, 6346, 6342,  205,  302, 7384,  339,  340,
      341,  342,  343, 6327,  357, 6334,  208,  255,  299,  353,
     6330, 6309,  267,  354,  355, 7384,  362, 6313,  359, 6321,
      367,  369,  370,  377, 6317, 6296,  365,  372,  378,  379,
      402,  389,  294,  385,  410,  382, 6309,  298,  441,  366,
      473,  474,  475,  476,  477, 6294,  491, 6301,  386,  387,
      438,  444, 6299, 6279,  487,  488,  489,  496,  498,  493,
      495,  497,  507,  511, 6292, 6290,  517,  518,  521,  539,
     6278, 6284, 6280,  519,  523, 6276, 6272,  572,  573,  574,
      592, 6259, 6264, 6260,  529,  587,  509, 6247,  576, 6255,

      532,  584,  629,  630, 6253, 6233,  553,  607,  536, 6246,
      631, 6242, 6238, 6234, 6232,  439, 6218,  628, 6226,  634,
      633,  635,  639, 6222, 6201,  638,  643,  647,   91, 6192,
     6182, 6184,  644,  650,  651,  653,  654, 6202, 6200,  665,
      669,  671,  689, 6188, 6195, 6192,  666,  685,  681,  721,
      722,  723,  724,  725,  739,  740, 6177,  741, 6184,  679,
      735,  736,  751, 6180, 6159,  651,  737,  752,  683,  656,
      750,  751,  760,  767,  769, 6163,  770, 6171,  753,  772,
      780,  781, 6168, 6147,  763,  765,  775,  788,  782, 6160,
     6156,  781,  791,  792,  810, 6143,  846, 6148, 6144,  806,

      799,  882,  890,  923,  959,  995,  849, 6142, 6139, 6137,
     1027, 1028, 1029, 1047, 6125, 1084, 6130, 6128,  807,  918,
     6096, 6121, 6090, 6084, 6077, 1031, 1117, 1118, 1119, 1120,
     1121, 1135, 6096, 1136, 7384, 6096, 6091, 6088, 6084,    0,
     6074, 6061, 6054, 6063,  804, 1041, 1137, 1138, 1139, 1153,
     1154, 6078, 6075, 1155, 1156, 1157,  811, 6062, 6067, 6063,
      920, 1043,  861, 1171, 1172, 1173, 1174, 1175, 6059, 6055,
     1189, 1190, 1191, 1209, 6042, 6049, 6046, 1131, 1132,  897,
     1193, 1213, 1220, 1229, 1230, 6031, 1239, 6038, 1034,  885,
      962,  998, 6034, 6013, 1186,  931, 1150, 1187, 6015, 1240,

     6023, 1223, 1039, 1087, 1242, 6019, 5998, 1201,  967, 1167,
     1232, 6000, 1246, 6007, 1251, 1254, 1258, 1260, 6003, 5982,
     1235,  974, 1262, 5995, 5982, 1264, 5990, 1264, 1266, 1267,
     1274, 5987, 5967, 1270, 1275, 1276, 5971, 1275, 5979, 1282,
     1286, 1287, 1288, 5977, 5957, 1283, 1289, 1293, 5959, 1291,
     5966, 1302, 1301, 1303, 1305, 5962, 5941, 1291, 1306, 1307,
     5954, 1311, 5935, 1315, 1317, 1327, 5938, 1329, 5947, 1322,
     1329, 1337, 1339, 5944, 5923, 1323, 1313, 1327, 7384, 1343,
     5925, 1347, 5932, 1347, 1354, 1357, 1358, 5928, 5907, 1341,
     1353, 1359, 1360, 5900, 1361, 5919, 5917, 5914, 1362, 1366,

     1372, 1381, 1382, 7384, 7384, 1383, 1384, 5893, 5897,    0,
        0, 5884, 5879, 1362, 1393, 1399, 1400, 5877, 1402, 1403,
     1409, 1363, 1374, 1418, 1419, 1420, 5875, 1421, 1430, 1436,
     1396, 1395, 1437, 1439, 1440, 1446, 1455, 5889, 5887, 1456,
     1457, 5867, 1475, 5871, 5876, 5874, 1414, 1433, 5871, 5867,
     1507, 1508, 5846, 1526, 5850, 5855, 5851, 1451, 1470, 1468,
     5849, 5846, 1510, 1558, 5827, 1576, 5832, 1612, 5837, 5833,
     1458, 1515, 1648, 5831, 5828, 1560, 1562, 5807, 1684, 5811,
     1720, 5816, 5812, 1522, 1565, 5808, 5806, 1752, 1753, 5786,
     1771, 5790, 1807, 5795, 5793, 1523, 1572, 5790, 5788, 1755,

     1839, 5768, 1857, 5772, 5777, 5775, 1767, 1760, 1844, 1889,
     1890, 1891, 1892, 1893, 5772, 5768, 1907, 1908, 5747, 1926,
     5751, 5756, 5752, 1768, 1846, 5750, 5747, 1910, 1959, 5728,
     1977, 5733, 5738, 5734, 1853, 1903, 1568, 5703, 5726, 5705,
     1855, 1904, 1923, 1961, 1963, 2010, 5703, 2011, 2012, 2013,
     5708, 5694, 2014, 2028, 2029, 2030, 2031, 1627, 2032, 2046,
     2047, 2048, 2049, 1663, 2050, 2064, 2065, 5693, 2066, 2067,
     2068, 5695, 2082, 7384, 5694, 5687, 5683, 5679,    0, 5669,
     5656, 5649, 5657, 1462, 1971, 2083, 5654, 2084, 2085, 2086,
     5656, 2100, 5663, 1513, 1431, 1467, 1518, 5661, 5641, 1915,

     1692, 1974, 1765, 2024, 2101, 5638, 2102, 2103, 2104, 5641,
     2118, 5650, 1758, 1563, 1615, 1651, 5647, 5628, 2097, 1699,
     2025, 1845, 5631, 2120, 5640, 1852, 1687, 1723, 1810, 5637,
     5616, 2114, 1822, 2042, 2078, 5618, 2121, 5625, 1905, 1918,
     1964, 2115, 5621, 5602, 2116, 2128, 2061, 2127, 5599, 2130,
     2137, 2139, 5603, 2141, 5611, 2151, 2149, 2152, 2153, 5607,
     5586, 2155, 2132, 2062, 2162, 5588, 2161, 5595, 2166, 2168,
     2169, 2172, 5591, 5570, 2167, 2173, 2176, 2175, 2173, 5568,
     2180, 2182, 2183, 5571, 2192, 5580, 2198, 2203, 2204, 2205,
     5577, 5556, 2185, 2188, 2207, 2210, 5558, 2204, 5565, 2212,

     2218, 2222, 2223, 5561, 5542, 2224, 2226, 2227, 2228, 2226,
     5539, 2227, 2237, 2243, 5543, 2247, 5551, 2232, 2238, 2242,
     2257, 5547, 5528, 2237, 2258, 2259, 2261, 2262, 5524, 5538,
     2262, 2263, 2269, 5517, 2272, 2279, 2281, 5519, 2288, 5526,
     2291, 2284, 2293, 2300, 5524, 5504, 2239, 2274, 2294, 2301,
     2302, 2304, 5502, 2310, 2311, 2314, 5505, 2320, 5512, 2309,
     2325, 2330, 2332, 5510, 5490, 2307, 2306, 2316, 2338, 2326,
     5482, 2339, 5499,    0, 5478,    0, 5474, 5489, 5469, 2336,
     2340, 2346, 2347, 2350, 5460, 2356, 2357, 2366, 2367, 2368,
     2377, 2378, 2384, 2387, 7384, 7384, 2388, 2394, 5463, 5468,

        0,    0, 5457, 5453, 2358, 2398, 2404, 2405, 2408, 2414,
     5468, 5466, 2415, 2424, 5446, 5450, 5455, 5451, 2416, 1966,
     2368, 2426, 2433, 2435, 2436, 2442, 5447, 5445, 2445, 2451,
     5425, 2469, 5431, 5437, 5433, 2420, 2410, 5429, 5425, 2501,
     2502, 5404, 2520, 5410, 5416, 5413, 2447, 2448, 2378, 5409,
     5405, 2504, 2552, 5384, 2570, 5388, 2606, 5393, 5389, 2466,
     2458, 2554, 2556, 2638, 2639, 2640, 5387, 5384, 2641, 2642,
     5363, 2660, 5367, 5372, 5370, 2516, 2464, 5367, 5363, 2692,
     2693, 5342, 2711, 5346, 5352, 5348, 2517, 2509, 2562, 2695,
     2743, 2744, 2745, 2746, 5344, 5340, 2747, 2761, 5319, 2779,

     5323, 5331, 5330, 2567, 2559, 5327, 5326, 2763, 2765, 5308,
     2815, 5313, 5321, 5320, 2707, 2700, 2652, 2847, 2848, 2849,
     2850, 2851, 5317, 5315, 2865, 2866, 5295, 2884, 5301, 5307,
     5305, 2708, 2757, 2653, 5272, 2920, 2868, 2952, 2953, 2954,
     2955, 5298, 5294, 2956, 2970, 5275, 1133, 5280, 5285, 5281,
     2759, 2768, 2771, 2971, 2972, 2973, 2974, 2988, 5277, 5273,
     2989, 2990, 5252, 3008, 5258, 5264, 5260, 2861, 2775, 2876,
     5256, 7384,    0,    0, 2427, 5254, 2992, 3041, 3042, 3043,
     3044, 5234, 3045, 3059, 3060, 5238, 5223, 3061, 3062, 3063,
     5224, 3077, 3078, 3079, 2461, 2342, 3080, 3081, 3095, 5221,

     3096, 3097, 3098, 5223, 3099, 7384, 5222, 5217, 5214, 5210,
        0, 5200, 5189, 5183, 5192, 2463, 2369, 3113, 5190, 3114,
     3115, 3116, 5192, 3117, 5199, 2507, 2512, 2557, 2609, 5197,
     5177, 2873, 2863, 2862, 2654, 2379, 3131, 5173, 3132, 3133,
     3134, 5175, 3135, 5182, 2698, 2703, 2818, 2923, 5178, 5157,
     2985, 2966, 2968, 2878, 5161, 3149, 5169, 2758, 3145, 3146,
     3154, 5165, 5144, 3129, 3147, 2984, 2406, 3155, 3158, 3164,
     5140, 3165, 3174, 3175, 5142, 3176, 7384, 5141, 5136, 5133,
     5129,    0, 5119, 5106, 5099, 5106, 3161, 3003, 3185, 5105,
     3186, 3192, 3195, 5108, 3196, 5116, 3163, 3177, 3186, 3187,

     5112, 5091, 3206, 3207, 3004, 3208, 3055, 3206, 3207, 3210,
     5087, 3216, 3217, 3226, 5089, 3233, 7384, 5088, 5084, 5083,
     5080,    0, 5072, 5060, 5055, 5063, 3222, 3073, 3235, 5060,
     3236, 3237, 3247, 5064, 3251, 5072, 3249, 3218, 3247, 3248,
     5068, 5047, 3261, 3238, 3056, 3262, 3091, 3261, 3265, 3268,
     5043, 3271, 3272, 3275, 5045, 3282, 7384, 5046, 5040, 5036,
     5034,    0, 5025, 5012, 5007, 5015, 3293, 3263, 4999, 5016,
     3286, 5024, 3296, 3294, 3297, 3298, 5022, 7384, 5002, 3300,
     3301, 3092, 3302, 3303, 3306, 4998, 3312, 3318, 3324, 3325,
     3317, 3327, 3334, 3336, 4996, 3338, 3345, 3348, 3339, 3346,

     3350, 3359, 3352, 3354, 3366, 3368, 3369, 4988, 3370, 3372,
     3384, 3386, 3387, 3360, 3388, 3390, 3402, 3404, 3405, 7384,
     7384, 3406, 3408, 4991, 4996,    0,    0, 4983, 4980, 3380,
     3420, 3422, 3423, 3424, 3426, 4996, 4992, 3438, 3440, 4971,
     4975, 4980, 4976, 3109, 3313, 3398, 3441, 3442, 3444, 3456,
     3458, 4972, 4968, 3459, 3460, 4947, 3478, 4951, 4957, 4953,
     3400, 3452, 4949, 4945, 3510, 3511, 4924, 3529, 4928, 4933,
     4929, 3416, 3474, 3470, 3513, 3561, 3562, 3563, 3564, 7384,
     7384, 3565, 3579, 4910, 4915,    0,    0, 4902, 4897, 3521,
     3580, 3581, 3582, 3583, 3597, 4912, 4910, 3598, 3599, 4890,

     4894, 4899, 4895, 3436, 3518, 3595, 3601, 3615, 3616, 3617,
     3618, 7384, 7384, 3619, 3633, 4874, 4878,    0,    0, 4865,
     4862, 3609, 3634, 3635, 3636, 3637, 3651, 4878, 4874, 3652,
     3653, 4855, 4860, 4867, 4864, 3438, 3525, 3649, 3655, 3669,
     3670, 3671, 3672, 7384, 7384, 3673, 3687, 4843, 4847,    0,
        0, 4834, 4829, 3663, 4826, 4840, 4838, 3688, 3689, 4818,
     3707, 4822, 4827, 4823, 3575, 3594, 3691, 3739, 3740, 3741,
     3742, 3699, 3743, 3757, 3758, 3759, 3760, 3765, 4822,   43,
     3788, 3769, 3820, 3821, 3822, 3823, 3824, 3838,  101, 3839,
     3840, 3841,  204,  233, 3842, 3856, 3857,  243, 3858, 3859,

     3860, 3472, 3364, 3874, 3875, 3876,  284, 3877, 3878, 3892,
      297, 3893, 7384,  382,  389,  392,  394,    0,  425,  477,
      504,  568, 3523, 3466, 3894,  571, 3895, 3896, 3910,  589,
     3911,  652, 3516, 3647, 3683, 3770,  690,  680, 3604, 3753,
     3611, 3701, 3771, 3912, 3913, 3914,  786, 3928, 3929, 3930,
      796,  834, 3931, 3932, 3946,  904, 3947, 3948, 3949, 3780,
     3783, 3950, 3964, 3965,  907, 3966, 3967, 3968,  917,  990,
     3982, 3983, 3984, 1038, 3985, 3986, 4000, 3996, 3834, 4002,
     4003, 4004, 1068, 4006, 4018, 4020, 1083, 1079, 1168, 4021,
     1187, 4022, 4024, 4036, 1194, 4038, 1228, 4036, 3785, 4032,

     4046, 1373, 1404, 4034, 3755, 3648, 4049, 3852, 4047, 4050,
     4057, 4059, 4077, 1483, 1509, 4061, 7384, 1562, 1562, 1602,
     1609,    0, 1639, 1709, 1734, 1790, 4109, 4110, 4111, 4112,
     4113, 1793, 4127, 4128, 4129, 4130, 4131, 4050, 4145, 4146,
     4147, 4148, 4149, 7384, 7384, 4163, 4164, 1832, 1841,    0,
        0, 1902, 1915, 4069, 4165, 4166, 4167, 4181, 4182, 1969,
     1973, 4183, 4184, 2009, 2087, 2133, 2269, 3684, 3870, 4189,
     4193, 4199, 4200, 4203, 4209, 2253, 4210, 4219, 4220, 4221,
     4230, 4221, 4231, 4237, 4240, 4241, 4247, 2330, 4251, 4257,
     4258, 4261, 4267, 4231, 4268, 4277, 4278, 4279, 4288, 2434,

     2440, 4289, 4295, 4298, 4299, 4305, 2514, 2564, 4309, 4315,
     2549, 4333, 2598, 2614, 2621, 3754, 3871, 4269, 2650, 4319,
     7384, 2660, 2694, 2762, 2805,    0, 2806, 2804, 2842, 2863,
     7384, 7384, 4365, 4366, 2904, 2919,    0,    0, 2949, 2981,
     4367, 4368, 4369, 4383, 4384, 4385, 4386, 2999, 4387, 4401,
     4402, 3048, 3108, 4403, 4404, 4405, 3143, 4419, 4420, 4421,
     4062, 3888, 4422, 4423, 4437, 4438, 4439, 4440, 4441, 4455,
     4456, 4457, 4176, 4458, 4459, 4473, 4474, 4475, 4476, 4477,
     3217, 4491, 3266, 4317, 4195, 4222, 4252, 3273, 3297, 4301,
     4300, 3835, 4280, 3906, 7384, 7384, 4492, 4493, 4494, 3309,

        0,    0, 3306, 3460, 4495, 4509, 4510, 4511, 4512, 3517,
     3556, 4513, 4527, 4528, 4529, 4530, 3555, 4531, 4545, 4546,
     4547, 4548, 4553, 3580, 3637, 4557, 4563, 4564, 4567, 4573,
     3667, 3703, 4574, 4583, 4584, 4543, 3706, 3779, 3802, 3907,
     3924, 4585, 4585, 4594, 4595, 4601, 4604, 3827, 3922, 4605,
     4611, 4615, 4621, 4622, 3922, 4625, 4631, 4632, 4641, 3960,
     3932, 4642, 4643, 4652, 4653, 4659, 4662, 4663, 4311, 3978,
     4669, 4673, 4679, 4680, 4683, 3940, 4689, 4690, 3980, 3979,
     4699, 4700, 4701, 4710, 4711, 4595, 4717, 4720, 4014, 4075,
     4124, 4721, 4727, 4321, 4016,    0, 4125,    0, 7384, 4745,

     4014, 4749, 4754, 4044, 4759, 4763, 4768, 4048, 4772, 4776,
     4781, 4785, 4789, 4793, 4797, 4801, 4806, 4069, 4810, 4815,
     4076, 4820, 4824, 4828, 4832, 4837, 4081, 4841, 4845, 4849,
     4853, 4857, 4861, 4866, 4119, 4871, 4875, 4880, 4139, 4884,
     4888, 4892, 4896, 4900, 4904, 4909, 4155, 4913, 4917, 4921,
     4926, 4156, 4930, 4934, 4938, 4942, 4946, 4950, 4954, 4957,
     4157, 4961, 4965, 4969, 4973, 4977, 4981, 4985, 4989, 4993,
     4998, 4173, 5002, 5007, 4174, 5012, 5016, 5021, 4175, 5026,
     5030, 5035, 4192, 5039, 5044, 4211, 5048, 5053, 4228, 5057,
     4238, 5061, 5065, 5069, 5074, 4255, 5078, 5083, 4269, 5088,

     5093, 5097, 5101, 5105, 5109, 5113, 4275, 5116, 5121, 5125,
     5129, 5133, 4286, 5137, 5141, 5146, 5150, 5154, 5158, 4306,
     5162, 5166, 5171, 5175, 5179, 5183, 5187, 5191, 4327, 5196,
     5200, 5204, 4330, 5209, 5214, 5218, 5222, 4337, 5227, 5231,
     5235, 4343, 5240, 5244, 5248, 4375, 5253, 5257, 5261, 4376,
     5266, 5270, 5274, 5278, 5282, 5286, 4377, 5291, 5295, 5299,
     4393, 5304, 5309, 5314, 4394, 5319, 5324, 5329, 5333, 5337,
     5341, 4395, 5345, 5349, 5352, 5356, 5360, 5364, 5369, 5373,
     5377, 5381, 5386, 5390, 5394, 5398, 4411, 5402, 5406, 5410,
     5413, 4412, 5418, 5422, 4413, 5426, 5430, 5434, 5439, 4429,

     5444, 5448, 4430, 5452, 5456, 5460, 5465, 4431, 5469, 5474,
     4447, 5479, 5483, 5488, 4448, 5492, 4449, 5496, 5500, 5504,
     5509, 4465, 5513, 5518, 4466, 5523, 5527, 4467, 5531, 5535,
     5539, 5544, 4483, 5548, 5553, 4484, 5558, 5562, 4485, 5566,
     5570, 5574, 5579, 4501, 5584, 5588, 5592, 5596, 4502, 5600,
     5604, 5608, 5613, 4503, 5618, 5622, 4519, 5626, 5630, 5634,
     5639, 4520, 5644, 5649, 5652, 4521, 5655, 4537, 5660, 4538,
     5664, 5668, 5672, 5675, 5679, 5683, 5687, 5691, 5695, 5699,
     5703, 5707, 5711, 4555, 5714, 5719, 5723, 5727, 5731, 5735,
     5739, 4556, 5744, 5749, 5753, 5757, 5761, 5765, 5769, 4565,

     5774, 5778, 5782, 4566, 5787, 5792, 5796, 5800, 4575, 5805,
     5809, 5813, 5817, 5821, 5825, 4582, 5830, 5834, 5838, 4592,
     5843, 5848, 5852, 5856, 5860, 5864, 5868, 4593, 5873, 5877,
     5881, 4602, 5886, 5891, 5895, 5899, 5903, 5907, 5911, 4612,
     5916, 5921, 5925, 5929, 5933, 5937, 5941, 4619, 5946, 5951,
     5955, 5959, 5963, 5967, 5971, 4623, 5976, 5981, 5984, 5987,
     5992, 5996, 6000, 6004, 6008, 6012, 4629, 6016, 6020, 6023,
     6027, 6031, 6035, 4633, 6039, 6043, 6048, 6052, 6056, 6060,
     4639, 6064, 6068, 6072, 6075, 4640, 6080, 6084, 4649, 6088,
     6092, 6096, 6101, 4650, 6106, 6110, 4651, 6114, 6118, 6122,

     6127, 4660, 6131, 6136, 4661, 6141, 6145, 6149, 6153, 4670,
     6157, 6161, 6165, 6168, 4671, 6173, 6177, 4677, 6181, 6185,
     6189, 6194, 4681, 6199, 6203, 6207, 6211, 4687, 6215, 6219,
     6223, 6226, 4691, 6231, 6235, 4697, 6239, 6243, 6247, 6252,
     4698, 6257, 6261, 6265, 6269, 4707, 6273, 6277, 6281, 6284,
     4708, 6289, 6293, 6298, 4709, 6302, 6306, 6310, 4718, 6314,
     6318, 6323, 6327, 6331, 6335, 4719, 6339, 6343, 6348, 6353,
     6357, 6361, 6365, 6368, 6372, 6376, 6380, 6385, 6389, 6393,
     6397, 6401, 6405, 4728, 6408, 6413, 6417, 6421, 6425, 6429,
     6433, 4729, 6438, 6443, 6447, 6451, 6455, 6459, 6463, 4731,

     6468, 6472, 6476, 4735, 6481, 6486, 6490, 6494, 6498, 6502,
     6506, 4736, 6509, 6514, 6518, 6522, 6526, 6530, 6534, 4737,
     6539, 6544, 6548, 6552, 6556, 6560, 6564, 4738, 6567, 6572,
     6576, 6580, 6584, 6588, 6592, 4739, 6597, 6602, 6606, 6610,
     6614, 6618, 6622, 4742, 6625, 6630, 6634, 6638, 4744, 6643,
     6647, 6651, 6655, 6660, 6664, 6668, 6672, 6677, 6682, 4748,
     6686, 6690, 6694, 6698, 6702, 6706, 6710, 4751, 6714, 6718,
     6721, 6725, 6729, 6733, 4753, 6737, 6741, 6746, 6750, 6754,
     6758, 4756, 6762, 6766, 6770, 6773, 4757, 6778, 6782, 4762,
     6786, 6790, 6794, 6799, 4765, 6804, 6808, 6812, 6816, 4767,

     6820, 6824, 6827, 6831, 6835, 6839, 4771, 6843, 6847, 6852,
     6856, 6860, 6864, 4775, 6868, 6872, 6875, 6879, 6883, 6887,
     4778, 6891, 6895, 6900, 6904, 6908, 6912, 4780, 6916, 6920,
     6923, 6927, 4784, 6931, 6935, 6939, 6944, 4788, 6949, 6953,
     6957, 6961, 6965, 6970, 6974, 6977, 4792, 6981, 6985, 6989,
     6992, 6996, 7000, 7004, 7009, 7013, 7017, 7021, 7025, 7029,
     4796, 7032, 7037, 7041, 7045, 7049, 7053, 7057, 4800, 7062,
     7067, 7071, 7075, 7079, 7082, 7086, 7090, 7094, 7099, 7103,
     7107, 7111, 7114, 7118, 7122, 7126, 7131, 7135, 7139, 7143,
     7146, 7150, 7154, 7158, 7162, 7166, 4803, 7171, 7176, 7180,

     7183, 4805, 7187, 7191, 4809, 7194, 7198, 7202, 7206, 7210,
     7214, 7218, 7222, 4812, 7226, 7230, 7233, 7237, 7241, 7245,
     4814, 7249, 7253, 7258, 7262, 7266, 7270, 7274, 7278, 7282,
     7286, 7290, 7295, 4817, 7299, 7303, 7307, 7311, 7315, 7319,
     7323, 7327, 7331, 7335, 7339, 7343, 7347, 7351, 7355, 7360,
     7364, 7369, 7374, 7377
    } ;

static const flex_int16_t yy_def[2655] =
    {   0,
     1899,    1, 1899, 1899, 1899, 1899, 1899, 1900, 1901, 1900,
     1900, 1900, 1900, 1900, 1900, 1900, 1899, 1899, 1899, 1899,
     1900, 1900, 1901, 1900, 1900, 1900, 1900, 1900, 1900, 1900,
     1899, 1899, 1900, 1900, 1899, 1900, 1900, 1900, 1900, 1899,
     1899, 1900, 1900, 1899, 1902, 1899, 1899, 1899, 1899, 1899,
     1903, 1904, 1903, 1903, 1903, 1900, 1900, 1905, 1899, 1900,
     1899, 1899, 1906, 1899, 1899, 1899, 1899, 1899, 1907, 1908,
     1907, 1907, 1907, 1900, 1899, 1899, 1899, 1909, 1910, 1902,
     1899, 1899, 1899, 1903, 1903, 1903, 1903, 1900, 1900, 1900,
     1900, 1911, 1905, 1899, 1900, 1899, 1899, 1899, 1912, 1913,

     1906, 1899, 1899, 1907, 1907, 1907, 1907, 1899, 1914, 1909,
     1915, 1910, 1910, 1899, 1916, 1899, 1899, 1899, 1899, 1899,
     1917, 1918, 1917, 1917, 1917, 1899, 1899, 1899, 1919, 1899,
     1899, 1899, 1899, 1899, 1920, 1921, 1920, 1920, 1920, 1903,
     1899, 1900, 1900, 1900, 1900, 1899, 1911, 1922, 1899, 1899,
     1923, 1912, 1924, 1913, 1913, 1899, 1925, 1899, 1899, 1899,
     1899, 1899, 1926, 1927, 1926, 1926, 1926, 1899, 1907, 1928,
     1914, 1914, 1914, 1915, 1899, 1899, 1929, 1930, 1916, 1899,
     1899, 1917, 1917, 1917, 1917, 1899, 1899, 1931, 1932, 1919,
     1899, 1899, 1920, 1920, 1920, 1920, 1903, 1899, 1933, 1899,

     1899, 1899, 1899, 1899, 1934, 1935, 1934, 1934, 1934, 1900,
     1900, 1900, 1900, 1899, 1936, 1922, 1899, 1937, 1899, 1899,
     1899, 1899, 1899, 1938, 1939, 1938, 1938, 1938, 1899, 1899,
     1899, 1899, 1940, 1923, 1923, 1923, 1924, 1899, 1899, 1941,
     1942, 1925, 1899, 1899, 1926, 1926, 1926, 1926, 1907, 1914,
     1928, 1943, 1929, 1944, 1930, 1930, 1899, 1945, 1899, 1899,
     1899, 1899, 1899, 1946, 1947, 1946, 1946, 1946, 1899, 1917,
     1948, 1931, 1949, 1932, 1932, 1899, 1950, 1899, 1899, 1899,
     1899, 1899, 1951, 1952, 1951, 1951, 1951, 1899, 1920, 1899,
     1899, 1953, 1954, 1933, 1899, 1899, 1899, 1934, 1934, 1934,

     1934, 1899, 1900, 1899, 1899, 1899, 1899, 1936, 1899, 1899,
     1955, 1956, 1937, 1899, 1899, 1899, 1938, 1938, 1938, 1938,
     1899, 1899, 1899, 1899, 1899, 1923, 1940, 1957, 1941, 1958,
     1942, 1942, 1899, 1959, 1899, 1899, 1899, 1899, 1899, 1960,
     1961, 1960, 1960, 1960, 1899, 1926, 1962, 1943, 1943, 1943,
     1944, 1899, 1899, 1963, 1964, 1945, 1899, 1899, 1946, 1946,
     1946, 1946, 1917, 1965, 1948, 1948, 1948, 1949, 1899, 1899,
     1966, 1967, 1950, 1961, 1899, 1951, 1951, 1951, 1951, 1920,
     1968, 1953, 1969, 1954, 1954, 1899, 1970, 1899, 1899, 1899,
     1899, 1899, 1971, 1972, 1971, 1971, 1971, 1899, 1899, 1973,

     1899, 1899, 1899, 1899, 1899, 1974, 1975, 1974, 1974, 1974,
     1976, 1899, 1977, 1899, 1899, 1899, 1899, 1899, 1978, 1979,
     1978, 1978, 1978, 1980, 1899, 1981, 1899, 1899, 1899, 1899,
     1899, 1982, 1983, 1982, 1982, 1982, 1899, 1984, 1899, 1899,
     1899, 1899, 1899, 1985, 1986, 1985, 1985, 1985, 1899, 1987,
     1899, 1899, 1899, 1899, 1899, 1988, 1989, 1988, 1988, 1988,
     1899, 1990, 1991, 1992, 1993, 1993, 1899, 1994, 1899, 1899,
     1899, 1899, 1899, 1995, 1996, 1995, 1995, 1995, 1899, 1899,
     1899, 1997, 1899, 1899, 1899, 1899, 1899, 1998, 1999, 1998,
     1998, 1998, 2000, 1899, 2001, 1899, 1899, 1899, 2002, 2003,

     2003, 2003, 2004, 1899, 1899, 2005, 2006, 2007, 1899, 2008,
     2008, 2008, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
     2015, 1899, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2022,
     1899, 2023, 2024, 2025, 2025, 2025, 2026, 1899, 1899, 2027,
     2028, 2029, 1899, 1899, 2030, 2030, 2030, 2030, 1899, 1899,
     2031, 2032, 2033, 1899, 1899, 2034, 2034, 2034, 2034, 2035,
     1899, 1899, 2036, 2037, 2038, 1899, 1899, 1899, 2039, 2039,
     2039, 2039, 1899, 1899, 1899, 2040, 2041, 2042, 1899, 1899,
     1899, 2043, 2043, 2043, 2043, 1899, 1899, 2044, 2045, 2046,
     1899, 1899, 1899, 2047, 2047, 2047, 2047, 1899, 1899, 2048,

     2049, 2050, 1899, 1899, 2051, 2051, 2051, 2051, 1899, 2052,
     2053, 2053, 2053, 2054, 1899, 1899, 2055, 2056, 2057, 1899,
     1899, 2058, 2058, 2058, 2058, 1899, 1899, 2059, 2060, 2061,
     1899, 1899, 2062, 2062, 2062, 2062, 2063, 1899, 2064, 2065,
     2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2074,
     1899, 2075, 2076, 2077, 2077, 2077, 2078, 2079, 2080, 2081,
     2081, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
     2089, 1899, 2090, 1899, 1899, 1899, 1899, 1899, 2091, 2092,
     2091, 2091, 2091, 1899, 2093, 2094, 2095, 2096, 2097, 2097,
     1899, 2098, 1899, 1899, 1899, 1899, 1899, 2099, 2100, 2099,

     2099, 2099, 1899, 2101, 2102, 2103, 2104, 2105, 2105, 1899,
     2106, 1899, 1899, 1899, 1899, 1899, 2107, 2108, 2107, 2107,
     2107, 1899, 1899, 2109, 1899, 1899, 1899, 1899, 1899, 2110,
     2111, 2110, 2110, 2110, 2112, 1899, 2113, 1899, 1899, 1899,
     1899, 1899, 2114, 2115, 2114, 2114, 2114, 2116, 2117, 2118,
     2119, 2119, 1899, 2120, 1899, 1899, 1899, 1899, 1899, 2121,
     2122, 2121, 2121, 2121, 1899, 1899, 2123, 1899, 1899, 1899,
     1899, 1899, 2124, 2125, 2124, 2124, 2124, 2126, 2127, 2128,
     2129, 2130, 2130, 1899, 2131, 1899, 1899, 1899, 1899, 1899,
     2132, 2133, 2132, 2132, 2132, 1899, 1899, 2134, 1899, 1899,

     1899, 1899, 1899, 2135, 2136, 2135, 2135, 2135, 2137, 2138,
     2139, 2140, 2141, 2141, 1899, 2142, 1899, 1899, 1899, 1899,
     1899, 2143, 2144, 2143, 2143, 2143, 1899, 2145, 1899, 1899,
     2146, 2147, 2148, 2149, 2150, 2151, 2151, 1899, 2152, 1899,
     1899, 1899, 1899, 1899, 2153, 2154, 2153, 2153, 2153, 1899,
     2155, 2156, 2157, 2158, 2159, 2159, 1899, 2160, 1899, 1899,
     1899, 1899, 1899, 2161, 2162, 2161, 2161, 2161, 1899, 2163,
     1899, 1899, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
     2172, 2172, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
     2180, 2180, 2180, 2181, 1899, 1899, 2182, 2183, 2184, 1899,

     2185, 2185, 2185, 2185, 2186, 2187, 2188, 2188, 2188, 2189,
     1899, 1899, 2190, 2191, 2192, 1899, 2193, 2193, 2193, 2193,
     2194, 2195, 2196, 2196, 2196, 2197, 1899, 1899, 2198, 2199,
     2200, 1899, 1899, 2201, 2201, 2201, 2201, 1899, 1899, 2202,
     2203, 2204, 1899, 1899, 2205, 2205, 2205, 2205, 2206, 1899,
     1899, 2207, 2208, 2209, 1899, 1899, 1899, 2210, 2210, 2210,
     2210, 2211, 2212, 2212, 2212, 2213, 1899, 1899, 2214, 2215,
     2216, 1899, 1899, 2217, 2217, 2217, 2217, 1899, 1899, 2218,
     2219, 2220, 1899, 1899, 2221, 2221, 2221, 2221, 2222, 2223,
     2224, 2224, 2224, 2225, 1899, 1899, 2226, 2227, 2228, 1899,

     1899, 2229, 2229, 2229, 2229, 1899, 1899, 2230, 2231, 2232,
     1899, 1899, 2233, 2233, 2233, 2233, 2234, 2235, 2236, 2236,
     2236, 2237, 1899, 1899, 2238, 2239, 2240, 1899, 1899, 2241,
     2241, 2241, 2241, 2242, 1899, 1899, 2243, 2244, 2244, 2244,
     2245, 1899, 1899, 2246, 2247, 2248, 1899, 1899, 2249, 2249,
     2249, 2249, 2250, 2251, 2252, 2252, 2252, 2253, 1899, 1899,
     2254, 2255, 2256, 1899, 1899, 2257, 2257, 2257, 2257, 2258,
     1899, 1899, 2259, 2260, 1899, 2261, 2262, 2263, 2264, 2265,
     2266, 2267, 2268, 2269, 2269, 1899, 2270, 2271, 2272, 2273,
     2274, 2275, 2276, 2276, 1899, 2277, 2278, 2279, 2280, 2281,

     2282, 2283, 2283, 1899, 2284, 1899, 1899, 1899, 1899, 1899,
     2285, 2286, 2285, 2285, 2285, 1899, 2287, 2288, 2289, 2290,
     2291, 2291, 1899, 2292, 1899, 1899, 1899, 1899, 1899, 2293,
     2294, 2293, 2293, 2293, 1899, 2295, 2296, 2297, 2298, 2299,
     2299, 1899, 2300, 1899, 1899, 1899, 1899, 1899, 2301, 2302,
     2301, 2301, 2301, 1899, 1899, 2303, 1899, 1899, 1899, 1899,
     1899, 2304, 2305, 2304, 2304, 2304, 2306, 2307, 2308, 2309,
     2310, 2311, 2312, 2312, 1899, 2313, 1899, 1899, 1899, 1899,
     1899, 2314, 2315, 2314, 2314, 2314, 1899, 2316, 2317, 2318,
     2319, 2320, 2320, 1899, 2321, 1899, 1899, 1899, 1899, 1899,

     2322, 2323, 2322, 2322, 2322, 1899, 2324, 2325, 2326, 2327,
     2328, 2329, 2330, 2330, 1899, 2331, 1899, 1899, 1899, 1899,
     1899, 2332, 2333, 2332, 2332, 2332, 1899, 2334, 2335, 2336,
     2337, 2338, 2338, 1899, 2339, 1899, 1899, 1899, 1899, 1899,
     2340, 2341, 2340, 2340, 2340, 1899, 2342, 2343, 2344, 2345,
     2346, 2347, 2348, 2348, 1899, 2349, 1899, 1899, 1899, 1899,
     1899, 2350, 2351, 2350, 2350, 2350, 1899, 2352, 1899, 1899,
     2353, 1899, 1899, 1899, 1899, 1899, 2354, 1899, 2355, 2354,
     2354, 2354, 2356, 2357, 2358, 2359, 2360, 2361, 2361, 1899,
     2362, 2363, 2364, 2365, 2366, 2367, 2368, 2368, 1899, 2369,

     2370, 1899, 2371, 2372, 2372, 2372, 2373, 2374, 2375, 2376,
     2376, 2376, 2377, 2378, 2379, 2380, 2380, 2380, 2381, 1899,
     1899, 2382, 2383, 2384, 1899, 2385, 2385, 2385, 2385, 2386,
     2387, 2388, 2388, 2388, 2389, 1899, 1899, 2390, 2391, 2392,
     1899, 2393, 2393, 2393, 2393, 2394, 2395, 2396, 2396, 2396,
     2397, 1899, 1899, 2398, 2399, 2400, 1899, 1899, 2401, 2401,
     2401, 2401, 1899, 1899, 2402, 2403, 2404, 1899, 1899, 2405,
     2405, 2405, 2405, 2406, 2407, 2408, 2408, 2408, 2409, 1899,
     1899, 2410, 2411, 2412, 1899, 2413, 2413, 2413, 2413, 2414,
     2415, 2416, 2416, 2416, 2417, 1899, 1899, 2418, 2419, 2420,

     1899, 2421, 2421, 2421, 2421, 2422, 2423, 2424, 2424, 2424,
     2425, 1899, 1899, 2426, 2427, 2428, 1899, 2429, 2429, 2429,
     2429, 2430, 2431, 2432, 2432, 2432, 2433, 1899, 1899, 2434,
     2435, 2436, 1899, 2437, 2437, 2437, 2437, 2438, 2439, 2440,
     2440, 2440, 2441, 1899, 1899, 2442, 2443, 2444, 1899, 2445,
     2445, 2445, 2445, 2446, 1899, 1899, 1899, 2447, 2448, 2449,
     1899, 1899, 2450, 2450, 2450, 2450, 2451, 2452, 2452, 2452,
     2453, 2454, 2455, 2456, 2456, 2456, 2457, 2458, 2459, 2460,
     1899, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
     2470, 2470, 1899, 2471, 2472, 2473, 2474, 2475, 2476, 2477,

     2477, 1899, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2484,
     1899, 2485, 1899, 1899, 1899, 1899, 1899, 2486, 2487, 2486,
     2486, 2486, 1899, 2488, 2489, 2490, 2491, 2492, 2492, 1899,
     2493, 1899, 1899, 1899, 1899, 1899, 2494, 2495, 2494, 2494,
     2494, 1899, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2502,
     1899, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2509, 1899,
     2510, 2511, 2512, 2513, 2514, 2515, 2516, 2516, 1899, 2517,
     2518, 2519, 2520, 2521, 2522, 2523, 2523, 1899, 2524, 2525,
     2526, 2527, 2528, 2529, 2530, 2530, 1899, 2531, 1899, 2532,
     2533, 2534, 2535, 2535, 1899, 2536, 1899, 1899, 1899, 1899,

     1899, 2537, 2538, 2537, 2537, 2537, 1899, 2539, 2540, 2541,
     2542, 2543, 1899, 2544, 1899, 2545, 1899, 1899, 1899, 1899,
     1899, 2546, 2547, 2546, 2546, 2546, 2548, 2549, 2549, 2549,
     2550, 2551, 2552, 2553, 2553, 2553, 2554, 2555, 2556, 2557,
     2557, 2557, 2558, 1899, 1899, 2559, 2560, 2561, 1899, 2562,
     2562, 2562, 2562, 2563, 2564, 2565, 2565, 2565, 2566, 1899,
     1899, 2567, 2568, 2569, 1899, 2570, 2570, 2570, 2570, 2571,
     2572, 2573, 2573, 2573, 2574, 2575, 2576, 2577, 2577, 2577,
     2578, 2579, 2580, 2581, 2581, 2581, 2582, 2583, 2584, 2585,
     2585, 2585, 2586, 2587, 2588, 2589, 2589, 2589, 2590, 2591,

     1899, 2592, 2593, 2593, 2593, 2594, 1899, 1899, 2595, 2596,
     2597, 1899, 1899, 2598, 2598, 2598, 2598, 2599, 1899, 2600,
     1899, 1899, 1899, 1899, 1899, 2601, 2602, 2601, 2601, 2601,
     1899, 1899, 2603, 2604, 2605, 1899, 2606, 2606, 2606, 2606,
     2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
     2616, 1899, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2623,
     1899, 2624, 2625, 2626, 2627, 2628, 2581, 2629, 2585, 2584,
     2589, 2588, 1899, 2593, 2592, 2630, 2595, 2631, 2596, 2596,
     1899, 2632, 1899, 1899, 1899, 1899, 1899, 2633, 2634, 2633,
     2633, 2633, 1899, 2598, 1899, 1899, 2635, 2636, 2600, 1899,

     2601, 2601, 2601, 2601, 2637, 2603, 2638, 2604, 2604, 1899,
     2606, 2639, 2613, 2613, 2613, 2615, 2617, 2640, 2620, 2620,
     2620, 2622, 2624, 1899, 1899, 2641, 2630, 2630, 2630, 2631,
     1899, 1899, 2642, 2643, 2632, 1899, 1899, 2633, 2633, 2633,
     2633, 2598, 2644, 2635, 2645, 2636, 2636, 1899, 2601, 2646,
     2637, 2637, 2637, 2638, 2606, 2613, 2639, 2620, 2640, 1899,
     1899, 2630, 2641, 2647, 2642, 2648, 2643, 2643, 1899, 2633,
     2649, 2644, 2644, 2644, 2645, 2601, 2637, 2646, 2650, 1899,
     2651, 2647, 2647, 2647, 2648, 2633, 2644, 2649, 2652, 2650,
     2653, 2647, 2651, 1899, 2652, 2654, 2653, 2654,    0, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899
    } ;

static const flex_int16_t yy_nxt[7424] =
    {   0,
        4,    5,    6,    4,    7,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    8,    4,    4,    4,    9,    8,
        8,   10,    8,   11,    8,    8,   12,    8,    8,    8,
       13,   14,    8,    8,   15,   16,    8,    4,   17,   20,
       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
       20,   20,   20,   20,   20,   77,   20,   32,   20,   58,
       78, 1480,   29,   81,   26,   28,   25,   24,   80,   30,
       37,   82,   27,   59,   33,   36,   43,  102,   39,   34,
       42,   38,   35,   56,   44,  103,   45,   46,   46,   46,
       74,   47,   48,   49,   50,   51,   20,   20,   46,   52,

       51,   51,   51,   51,   51,   51,   51,   51,   51,   53,
       51,   51,   51,   54,   55,   51,   51,   51,   57, 1489,
       81,  321,   60,   41,  322,   62,   83,   63,   64,   64,
       64,   76,   65,   66,   67,   68,   69,   76,   81,   64,
       70,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       71,   69,   69,   69,   72,   73,   69,   69,   69,   81,
       81,   81,   20,   58,   85,   20,  102,  102,   98,   20,
       76,  102,  102,   99,   32,  102,   75,   97,   97,   87,
       93,  101,   97,  102,  141,   81,   20,   32,   89,   86,
       90,   95,   77,   20,   88,   77,   91,   78,  105,   20,

      111,  107, 1899,  140,  106,  110,  102, 1899,  113,  180,
      142,   81,  108,  144, 1493,   80,   81,  181,  114,  143,
      115,  116,  116,  116,  169,  117,  118,  119,  120,  121,
       85,  145,  116,  122,  121,  121,  121,  121,  121,  121,
      121,  121,  121,  123,  121,  121,  121,  124,  125,  121,
      121,  121,  126,   83, 1632,  128,  180,  129,  130,  130,
      130, 1498,  131,  132,  133,  134,  135,  175,  180,  130,
      136,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      137,  135,  135,  135,  138,  139,  135,  135,  135,  126,
     1899,   98,   98, 1899,  183,   20,   99,  153, 1899,  148,

      180, 1899, 1507,  102,  152,  155,  101,   93,  102, 1644,
      156,  175,  157,  158,  158,  158,  216,  159,  160,  161,
      162,  163,  105,  211,  158,  164,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  165,  163,  163,  163,  166,
      167,  163,  163,  163,   77, 1899,   77,   77,   77,  170,
     1899,  111,  111,  111,  180,  180,  180,  172,  110,  174,
      113,  113,  176,   81,  187,  175,  191,  177,  191,  188,
      191,  191,  127,  191,  185,  179,  192,  190,  191,  191,
       81,  186,  186,  146,  184,  229,   20,  243,  243,  186,
       20, 1649,  194,  230,  214,  244,  231,  196,  232,  238,

      197, 1644,  195,  141, 1644,  198, 1644,  199,  200,  200,
      200,   20,  201,  202,  203,  204,  205,  210,  212,  200,
      206,  205,  205,  205,  205,  205,  205,  205,  205,  205,
      207,  205,  205,  205,  208,  209,  205,  205,  205,  243,
     1899,  213,  149, 1519,  217,  243,  218,  219,  219,  219,
      238,  220,  221,  222,  223,  224,  238,  216,  219,  225,
      224,  224,  224,  224,  224,  224,  224,  224,  224,  226,
      224,  224,  224,  227,  228,  224,  224,  224,   98, 1899,
       98,   98,   98,  233, 1899,  153,  153,  153,  243,  243,
      243,  235,  152,  237,  155,  155,  239,  102,   77,  102,

       77,  240,   77,  170, 1651,  170,  168,  170,  248,  242,
       81,  251,   77,  172,  246,  172,   77,  170,  247,  249,
      180,  111,  176,  176,  180,  172, 1899,  177,  254,  174,
      191, 1899,   85,  295, 1652,  253,  256,  295,  270,  179,
      180,  296,  257,  183,  258,  259,  259,  259,  289,  260,
      261,  262,  263,  264,  295,  301,  259,  265,  264,  264,
      264,  264,  264,  264,  264,  264,  264,  266,  264,  264,
      264,  267,  268,  264,  264,  264,  126,  187,  187, 1899,
      299,  291,  188,  273, 1899,  295,  292, 1653,  191, 1526,
      272,  275,  190,  191,  294,  276,  290,  277,  278,  278,

      278, 1660,  279,  280,  281,  282,  283,  194,  295,  278,
      284,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      285,  283,  283,  283,  286,  287,  283,  283,  283,  126,
      297,  295,   20,  310,  314,  314,  316,  300,  311,  314,
      314,  290,  290,  315,  314,  309,  313,  309,  314,   98,
      303,  309,  357,  243,  233,   98,   98,  180,   98,   98,
      233,  233,  327,  233,  153,  318,  320,  243,  235,  235,
      239,  235,  237,  319,  239,  240, 1899,  363,  360,  330,
      357, 1899,  102,  329,  180,  346,  243,  332,  358,  242,
      243,  243,  333,  269,  334,  335,  335,  335, 1538,  336,

      337,  338,  339,  340,  105,  246,  335,  341,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  342,  340,  340,
      340,  343,  344,  340,  340,  340,   77,   77,  176, 1899,
      176,  170,  170,  347, 1899,  254,  357,  357,  357,  172,
      251,  349,  253,  351,  176,  176,  353,  352,  352,  254,
      254,  354,  357,  357,  374,  187, 1899,  256,  256,  356,
      364, 1899,  375,  352,  374,  187,  374,  361,  366,  272,
      273,  362,  187,  374,  187,  370,  374,  273,  368,  273,
      371,  374,  374,  191,  369,  275,  291,  275,  373,  191,
      377,  292,  369,  369,  379,  378,  291, 1899,  288,  382,

      295,  383, 1899,  380, 1547,  243, 1551,  295,  314,  385,
      294,  295,  357,  386,  345,  387,  388,  388,  388,  299,
      389,  390,  391,  392,  393,  411,  493,  388,  394,  393,
      393,  393,  393,  393,  393,  393,  393,  393,  395,  393,
      393,  393,  396,  397,  393,  393,  393,  297,  126,  399,
      307,  400,  401,  401,  401, 1676,  402,  403,  404,  405,
      406,  461,  180,  401,  407,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  408,  406,  406,  406,  409,  410,
      406,  406,  406,  302,  183,  412,  543,  413,  414,  414,
      414,   20,  415,  416,  417,  418,  419,  538,  191,  414,

      420,  419,  419,  419,  419,  419,  419,  419,  419,  419,
      421,  419,  419,  419,  422,  423,  419,  419,  419,  314,
      194,  357, 1556,  424,  304, 1565,  425, 1569,  426,  427,
      427,  427,  543,  428,  429,  430,  431,  432,  318,  523,
      427,  433,  432,  432,  432,  432,  432,  432,  432,  432,
      432,  434,  432,  432,  432,  435,  436,  432,  432,  432,
      305,  547,  437,  543,  438,  439,  439,  439,  554,  440,
      441,  442,  443,  444,  538,  566,  439,  445,  444,  444,
      444,  444,  444,  444,  444,  444,  444,  446,  444,  444,
      444,  447,  448,  444,  444,  444,  306,  558,  449,  543,

      450,  451,  451,  451,  571,  452,  453,  454,  455,  456,
      538, 1688,  451,  457,  456,  456,  456,  456,  456,  456,
      456,  456,  456,  458,  456,  456,  456,  459,  460,  456,
      456,  456,  310,  310, 1899,  543,   98,  311,  464, 1899,
      554,  233,  243,  544,  357,  463,  466,  313,  314,  235,
      467,  549,  468,  469,  469,  469, 1574,  470,  471,  472,
      473,  474,  514,  360,  469,  475,  474,  474,  474,  474,
      474,  474,  474,  474,  474,  476,  474,  474,  474,  477,
      478,  474,  474,  474,  479,  316, 1583,  481,  554,  482,
      483,  483,  483, 1587,  484,  485,  486,  487,  488,  549,

     1700,  483,  489,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  490,  488,  488,  488,  491,  492,  488,  488,
      488,  479,   98,  239, 1899,  239,  239,  233,  499, 1899,
      330,  330,  374,  374, 1047,  327,  501,  329,  503,  332,
      239,  505,  176,  176,  176,  330,  506,  347,  347,  347,
      532,  543,  377,  332,  508,  516,  349,  349,  176,  176,
      353,  353, 1899,  347,  254,  354,  519, 1899,  554,  548,
      479,  349,  351,  518,  521,  356,  187,  187,  187,  187,
      187,  364,  364,  364,  364,  273,  559,  543,  295,  525,
      366,  366,  366,  368,  370,  370, 1899,  398,  291,  371,

      528, 1899,  554,  533, 1701, 1591, 1707,  527,  530,  373,
      374,  535,  333,  546,  334,  335,  335,  335, 1899,  336,
      337,  338,  339, 1899,  554,  291,  335,  341,  557, 1712,
      383,  382,  555,  295,  291,  291,  566,  342,  537,  383,
      383,  343,  344,  554,  539,  550,  126,  385,  385,  540,
      551,  562,  566,  560,  549,  566,  563,  542,  553,  568,
      567,  566,  570,  566,  565,  579,  561,  579,  581,  575,
      561,  579,  561,  580,  576,  579,  579,  579,  574,  574,
      587,  572,  578,  591,  591,  588,  574,  591,  593,  591,
      591,  592,  603,  590,  591,  585,  599,  583,  586,  586,

      586,  600,  603,  603,  603,  584,  603,  603,  603,  602,
      595,  604,  597,  598,  620,  598,  310,  598,  606,  596,
      310,  610,  310,  620,  620,  464,  608,  464,  620,  612,
      620,  621,  310,  614,  616,  466,  607,  464,  620,  617,
      620,  615,  631,  624,  314,  466,  625,  619,  631,  615,
      623,  615,  627,  480,  631,  631,  632,  628,  631,  631,
      631,  314,  495,  243,  357,  630,  626,  239,  634,  626,
      626,  239,  499,  522, 1712,  357,  499,  239,  636,  640,
      645,  637,  499,  635,  501,  246,  239,  239,  505,  505,
      501,  499,  330,  506,  648,  658,  374,  374,  176,  501,

      503,  647,  650,  347,  176,  353,  531,  353,  353,  347,
      653,  349,  519,  519,  353,  543,  664,  516,  655,  519,
      657,  521, 1603,  187,  187,  370,  370,  521,  364,  364,
      659,  528,  243,  685,  543,  370,  366,  525,  661,  663,
      528,  370,  291,  911,  291,  291,  528,  533,  530,  533,
      533,  291,  554,  546,  530,  666,  533,  535,  535,  566,
      291,  539,  539,  543,  535,  383,  540,  669,  243,  295,
      704,  554,  684,  537,  668,  671,  543,  735,  672,  911,
      673,  674,  674,  674, 1613,  675,  676,  677,  678,  679,
      557,  299,  674,  680,  679,  679,  679,  679,  679,  679,

      679,  679,  679,  681,  679,  679,  679,  682,  683,  679,
      679,  679,  550,  550,  243,  562,  566,  551,  688,  243,
      563, 1731,  916,  579,  591,  687,  690,  554,  706,  691,
      911,  692,  693,  693,  693,  570,  694,  695,  696,  697,
      698,  778,  809,  693,  699,  698,  698,  698,  698,  698,
      698,  698,  698,  698,  700,  698,  698,  698,  701,  702,
      698,  698,  698,  562,  932,  575,  579,  575,  707,  314,
      576, 1736,  750,  591, 1731,  927,  709,  566,  749,  710,
      752,  711,  712,  712,  712,  583,  713,  714,  715,  716,
      717,  318,  595,  712,  718,  717,  717,  717,  717,  717,

      717,  717,  717,  717,  719,  717,  717,  717,  720,  721,
      717,  717,  717,  568, 1731,  723,  932,  724,  725,  725,
      725, 1731,  726,  727,  728,  729,  730,  927,  357,  725,
      731,  730,  730,  730,  730,  730,  730,  730,  730,  730,
      732,  730,  730,  730,  733,  734,  730,  730,  730,  573,
      360,  736,  932,  737,  738,  738,  738, 1623,  739,  740,
      741,  742,  743,  927,  374,  738,  744,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  745,  743,  743,  743,
      746,  747,  743,  743,  743,  579,  377,  753,  943,  754,
      755,  755,  755,  243,  756,  757,  758,  759,  760,  938,

      932,  755,  761,  760,  760,  760,  760,  760,  760,  760,
      760,  760,  762,  760,  760,  760,  763,  764,  760,  760,
      760,  581,  919,  766,  943,  767,  768,  768,  768,  936,
      769,  770,  771,  772,  773,  938, 1738,  768,  774,  773,
      773,  773,  773,  773,  773,  773,  773,  773,  775,  773,
      773,  773,  776,  777,  773,  773,  773,  587,  587,  932,
      599,  603,  588,  781, 1739,  600,  554,  933,  603,  620,
      780,  783,  591,  811,  784,  703,  785,  786,  786,  786,
      606,  787,  788,  789,  790,  791,  828,  851,  786,  792,
      791,  791,  791,  791,  791,  791,  791,  791,  791,  793,

      791,  791,  791,  794,  795,  791,  791,  791,  593, 1740,
      797,  943,  798,  799,  799,  799, 1327,  800,  801,  802,
      803,  804,  938,  943,  799,  805,  804,  804,  804,  804,
      804,  804,  804,  804,  804,  806,  804,  804,  804,  807,
      808,  804,  804,  804,  599,  609,  566,  620,  829,  812,
     1648, 1752,  947,  943,  631,  722,  641,  814,  603,  830,
      815,  944,  816,  817,  817,  817,  623,  818,  819,  820,
      821,  822,  870,  875,  817,  823,  822,  822,  822,  822,
      822,  822,  822,  822,  822,  824,  822,  822,  822,  825,
      826,  822,  822,  822,  310,  310,  310,  310,  310,  610,

      610,  610,  610,  464,  631,  642,  955,  832,  612,  612,
      612,  614,  616,  616,  956,  627,  243,  617,  835,  955,
      628, 1753,  877,  634,  643,  834,  837,  620,  853,  838,
      950,  839,  840,  840,  840, 1651,  841,  842,  843,  844,
      845,  879,  918,  840,  846,  845,  845,  845,  845,  845,
      845,  845,  845,  845,  847,  845,  845,  845,  848,  849,
      845,  845,  845,  479,  627,  957,  239,  243,  239,  854,
      243,  499,  543,  499,  243,  243,  950,  856,  631,  501,
      857,  645,  858,  859,  859,  859,  918,  860,  861,  862,
      863,  864,  905,  920,  859,  865,  864,  864,  864,  864,

      864,  864,  864,  864,  864,  866,  864,  864,  864,  867,
      868,  864,  864,  864,  479,  505,  505,  505,  505,  353,
      880,  648,  648,  648,  653,  554,  932, 1664,  882,  884,
      650,  650,  887,  353,  353,  353,  353,  370,  653,  653,
      653,  519,  659,  943,  937,  921,  655,  655,  655,  657,
      889,  370,  370,  370,  370,  291,  659,  659,  659,  528,
      533,  948,  955,  972,  661,  661,  661,  663,  535,  291,
      539,  539,  539,  539,  533,  890,  669,  669,  669,  566,
      961,  977,  666,  892,  894,  671,  671,  896,  550,  550,
      550,  550,  897,  906,  688,  688,  688, 1761,  932,  949,

      899,  908,  910,  690,  690,  912,  562,  562,  562,  562,
      913,  922,  707,  707,  707,  943,  955,  955,  915,  924,
      926,  709,  709,  928,  935,  939,  951,  950,  929,  955,
      940,  952,  575,  972,  243,  575,  931,  962,  942,  954,
      750,  946,  575,  959,  575,  964,  968,  750,  966,  750,
      972,  969,  972,  972,  972,  752,  972,  752,  960,  971,
      973,  967,  976,  579,  967,  967,  979,  983,  983,  983,
      983,  980,  765,  983,  983,  984,  579,  983,  587,  982,
      978,  978,  975,  990,  978,  587, 1000,  587,  587, 1000,
      781,  992,  781,  781,  986,  988,  989,  996,  994, 1000,

      783,  783,  997,  987, 1000, 1000, 1000, 1001, 1000, 1007,
      999,  591, 1003, 1011, 1008,  995,  995,  995, 1004, 1011,
      796, 1012, 1010, 1011, 1011, 1011, 1005, 1011, 1011,  591,
     1006,  599,  599, 1028, 1006, 1006, 1018,  812, 1028, 1028,
     1047, 1029,  599, 1028, 1020, 1022, 1016,  812,  599, 1017,
     1023, 1014, 1024,  812, 1023,  814, 1015, 1025, 1028, 1028,
     1028,  814,  603,  603, 1031, 1027, 1050,  310,  310, 1023,
      243,  827,  610,  610,  616, 1047, 1387,  616, 1033, 1037,
      612,  832,  835, 1034,  616, 1047,  616, 1039, 1032,  835,
     1041,  835, 1047, 1043, 1047, 1047, 1042,  837, 1044,  837,

     1048, 1047,  620,  620, 1051, 1042, 1046, 1064, 1064,  627,
     1064,  850, 1042, 1052, 1054,  627,  627, 1064, 1065,  627,
      854,  854, 1056, 1053,  854, 1060, 1064,  631, 1058,  856,
     1061, 1064,  856, 1064, 1067, 1069, 1068, 1059, 1063,  631,
      872,  505, 1059,  243, 1059,  505,  880, 1070,  869, 1072,
      880,  505,  505, 1419, 1078,  505,  880,  880,  882,  543,
      648,  353,  353, 1314,  882,  882,  653,  653,  884,  554,
      932,  370,  370,  539,  655,  887,  659,  659,  890,  566,
      943,  546,  539,  539,  661,  889, 1080,  890,  890,  539,
     1330,  557,  539,  896,  890,  892,  892,  669,  897,  896,

     1346,  570,  892,  550, 1083,  894, 1082,  955,  906,  550,
      550,  932, 1085,  550,  906,  906, 1089,  243,  906,  550,
      912,  932,  908,  908,  688,  913,  908, 1374, 1075,  912,
      935,  562,  910, 1091, 1092, 1096,  922, 1302,  562, 1117,
      562,  562, 1094,  922, 1098,  922,  922,  562,  943,  943,
      928,  924,  707,  924,  924,  929,  928, 1451, 1773,  955,
      926, 1101,  243, 1100,  932,  972, 1136,  955,  946, 1103,
      932, 1095, 1104, 1116, 1105, 1106, 1106, 1106,  959, 1107,
     1108, 1109, 1110, 1111,  975, 1167, 1106, 1112, 1111, 1111,
     1111, 1111, 1111, 1111, 1111, 1111, 1111, 1113, 1111, 1111,

     1111, 1114, 1115, 1111, 1111, 1111,  939,  939,  243,  951,
      983,  940, 1120,  243,  952, 1712, 1341,  972,  983, 1119,
     1122,  943, 1138, 1123, 1336, 1124, 1125, 1125, 1125,  986,
     1126, 1127, 1128, 1129, 1130, 1188, 1207, 1125, 1131, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1132, 1130,
     1130, 1130, 1133, 1134, 1130, 1130, 1130,  951,  243,  575,
     1000,  575, 1139,  579,  962, 1712,  962, 1711, 1000, 1336,
     1141,  955, 1169, 1142,  964, 1143, 1144, 1144, 1144, 1003,
     1145, 1146, 1147, 1148, 1149,  583, 1228, 1144, 1150, 1149,
     1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1151, 1149,

     1149, 1149, 1152, 1153, 1149, 1149, 1149,  957, 1793, 1155,
      243, 1156, 1157, 1157, 1157, 1712, 1158, 1159, 1160, 1161,
     1162, 1336, 1712, 1157, 1163, 1162, 1162, 1162, 1162, 1162,
     1162, 1162, 1162, 1162, 1164, 1162, 1162, 1162, 1165, 1166,
     1162, 1162, 1162,  575,  575,  575,  968,  968,  962,  962,
      750,  969, 1172,  591,  603,  943,  964,  964,  966, 1171,
     1174,  972, 1795, 1175, 1135, 1176, 1177, 1177, 1177, 1800,
     1178, 1179, 1180, 1181, 1182,  595,  606, 1177, 1183, 1182,
     1182, 1182, 1182, 1182, 1182, 1182, 1182, 1182, 1184, 1182,
     1182, 1182, 1185, 1186, 1182, 1182, 1182,  979,  979, 1357,

      587, 1011,  980, 1191, 1357,  990, 1795, 1358, 1011, 1028,
     1190, 1193,  983, 1209, 1194, 1352, 1195, 1196, 1196, 1196,
     1014, 1197, 1198, 1199, 1200, 1201, 1247, 1268, 1196, 1202,
     1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1201, 1203,
     1201, 1201, 1201, 1204, 1205, 1201, 1201, 1201,  587,  587,
      587,  587,  996,  990,  990,  990,  781,  997, 1028, 1368,
     1047,  992,  992,  992,  994, 1211,  996, 1369, 1007, 1047,
     1007, 1212,  620, 1008, 1795, 1231, 1064, 1031, 1291, 1214,
     1000, 1230, 1215, 1233, 1216, 1217, 1217, 1217, 1050, 1218,
     1219, 1220, 1221, 1222,  623, 1067, 1217, 1223, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1224, 1222, 1222,
     1222, 1225, 1226, 1222, 1222, 1222, 1011, 1795, 1234, 1357,
     1235, 1236, 1236, 1236, 1727, 1237, 1238, 1239, 1240, 1241,
     1352, 1802, 1236, 1242, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1243, 1241, 1241, 1241, 1244, 1245, 1241,
     1241, 1241,  599,  599,  599,  599,  599, 1018, 1018, 1018,
     1018,  812, 1064,  243,  243, 1249, 1020, 1020, 1020, 1022,
     1024, 1024, 1803,  616,  243, 1025, 1252,  631, 1037,  955,
     1300, 1345, 1804, 1251, 1254, 1028, 1284, 1255, 1154, 1256,
     1257, 1257, 1257, 1344, 1258, 1259, 1260, 1261, 1262,  634,

     1343, 1257, 1263, 1262, 1262, 1262, 1262, 1262, 1262, 1262,
     1262, 1262, 1264, 1262, 1262, 1262, 1265, 1266, 1262, 1262,
     1262, 1036, 1735, 1270, 1357, 1271, 1272, 1272, 1272, 1810,
     1273, 1274, 1275, 1276, 1277, 1352, 1278, 1272, 1279, 1277,
     1277, 1277, 1277, 1277, 1277, 1277, 1277, 1277, 1280, 1277,
     1277, 1277, 1281, 1282, 1277, 1277, 1277,  616,  616,  616,
      616, 1043, 1037, 1037, 1037,  835, 1044, 1357, 1811, 1357,
     1039, 1039, 1039, 1041, 1286, 1043,  627,  627,  627,  627,
     1287, 1054, 1054, 1054, 1054, 1368, 1357, 1362, 1289, 1293,
     1056, 1056, 1056,  627, 1060, 1060, 1361,  505,  854, 1061,

     1296, 1738,  880, 1373,  972,  243, 1058, 1295, 1298, 1064,
      882,  333, 1360,  334,  335,  335,  335, 1748,  336,  337,
      338,  339,  340, 1405, 1390,  335,  341,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  342,  340,  340,  340,
      343,  344,  340,  340,  340,  479,  505,  539,  539,  896,
      896,  880,  890,  890, 1303, 1083,  983,  243, 1752, 1078,
      892, 1080, 1305, 1307,  896,  896,  550,  550,  912, 1083,
     1083,  906,  906, 1309, 1000, 1437, 1406, 1085, 1085,  908,
     1089, 1311,  912,  912,  912,  562,  562, 1092, 1092, 1092,
      922,  922, 1011, 1461, 1422, 1313, 1094, 1094,  924, 1098,

      928,  928,  928,  928, 1321, 1315, 1101, 1101, 1101, 1322,
      243, 1466, 1438, 1317, 1319, 1103, 1103, 1324,  939,  939,
      939,  939, 1337, 1331, 1120, 1120, 1120, 1338, 1503, 1817,
     1368, 1333, 1335, 1122, 1122, 1340,  951,  951,  951,  951,
     1353, 1347, 1139, 1139, 1139, 1354, 1368, 1368, 1368, 1349,
     1351, 1141, 1141, 1356, 1364, 1368, 1371, 1363, 1363, 1365,
      575, 1757,  972,  575,  243,  962, 1363, 1367,  962,  968,
      968, 1187, 1401,  964, 1375, 1172, 1169, 1372,  243,  968,
      968, 1381, 1377, 1379, 1172, 1172, 1382,  243,  243, 1396,
      979,  979, 1174, 1174, 1384, 1391, 1191,  979, 1396, 1396,

      979, 1397, 1191, 1393, 1395, 1191, 1398,  243,  243,  983,
     1193,  587,  587, 1193, 1400,  996,  990,  990, 1206,  243,
     1407,  996,  996, 1000,  992, 1209, 1212, 1212, 1409, 1831,
     1428,  996, 1227, 1403, 1411, 1214, 1212, 1404, 1413,  243,
     1007, 1007, 1007, 1414, 1214, 1423, 1231, 1231,  243,  243,
      243, 1416, 1007, 1425, 1427, 1233, 1429, 1231, 1433, 1428,
     1428, 1430,  243, 1011, 1028, 1233,  599, 1836, 1436, 1432,
      599, 1018, 1246, 1024, 1836, 1018, 1024, 1024, 1439, 1020,
     1024, 1252, 1252, 1249, 1454, 1252, 1441, 1445, 1435, 1443,
     1254, 1457, 1446, 1254, 1028, 1461, 1458, 1461, 1461, 1461,

     1448, 1461, 1461, 1267, 1460, 1462, 1456,  616,  616, 1456,
     1456, 1043, 1037, 1037,  243, 1789, 1467, 1043, 1047, 1848,
     1039, 1284, 1287, 1043, 1469, 1849, 1047, 1464, 1287, 1043,
     1471, 1465,  627, 1343, 1287, 1290, 1289, 1054, 1472,  627,
     1064, 1060, 1289, 1060, 1054, 1056, 1473, 1064, 1296, 1299,
     1060, 1301, 1293, 1060, 1475, 1296, 1477,  896, 1296,  896,
     1481,  243, 1303, 1298, 1303,  243, 1298, 1478, 1480, 1302,
     1483,  896, 1305,  896,  896,  912, 1303,  912, 1303, 1083,
     1309,  932, 1309,  918, 1305, 1638, 1305, 1307, 1485,  912,
     1311,  912,  912,  928, 1309,  928, 1309, 1092, 1315,  943,

     1315, 1357, 1311,  935, 1311, 1313, 1487,  928, 1317,  928,
      928, 1321, 1315, 1321, 1315, 1101, 1322, 1368, 1490, 1524,
     1317,  946, 1317, 1319, 1489,  939, 1492,  939,  939,  939,
     1331,  939, 1331, 1331, 1331, 1543, 1120,  243, 1496,  243,
     1333, 1333, 1333, 1337, 1335, 1337,  951,  951, 1338,  951,
     1499, 1347, 1347, 1357, 1347, 1561, 1498, 1579, 1501, 1505,
     1349,  951, 1349,  951, 1353, 1353, 1347, 1357, 1139, 1354,
     1508,  955, 1360,  243, 1349, 1368, 1351, 1507, 1510, 1357,
     1802, 1511, 1502, 1512, 1513, 1513, 1513, 1654, 1514, 1515,
     1516, 1517, 1518,  959, 1371, 1513, 1519, 1518, 1518, 1518,

     1518, 1518, 1518, 1518, 1518, 1518, 1520, 1518, 1518, 1518,
     1521, 1522, 1518, 1518, 1518, 1364, 1364,  243,  968,  243,
     1365, 1527,  972, 1375, 1357, 1665,  243, 1810, 1526, 1529,
     1368, 1545, 1530, 1523, 1531, 1532, 1532, 1532, 1403, 1533,
     1534, 1535, 1536, 1537,  975, 1435, 1532, 1538, 1537, 1537,
     1537, 1537, 1537, 1537, 1537, 1537, 1537, 1539, 1537, 1537,
     1537, 1540, 1541, 1537, 1537, 1537,  968,  968,  968,  968,
     1381, 1375, 1375, 1375, 1172, 1382, 1461, 1855, 1651, 1377,
     1377, 1377, 1379, 1547, 1381,  979,  979,  979,  979, 1548,
     1391, 1391, 1391, 1391, 1608, 1461,  983, 1550, 1554, 1393,

     1393, 1393,  979, 1397, 1397,  243,  996, 1191, 1398, 1557,
     1000, 1407,  243, 1860, 1464, 1395, 1556, 1559,  986, 1563,
      996,  996,  996,  996, 1413, 1407, 1407, 1407, 1212, 1414,
     1669, 1667, 1003, 1409, 1409, 1409, 1411, 1565, 1413, 1007,
     1007, 1007, 1007, 1566, 1423, 1423, 1423, 1423,  243, 1712,
     1011, 1568, 1572, 1425, 1425, 1425, 1007, 1429, 1429, 1660,
     1024, 1231, 1430, 1575, 1028, 1439, 1861, 1717, 1836, 1427,
     1574, 1577, 1014, 1581, 1024, 1024, 1024, 1024, 1445, 1439,
     1439, 1439, 1252, 1446,  243,  243, 1031, 1441, 1441, 1441,
     1443, 1583, 1445, 1457, 1457, 1660, 1043, 1584, 1458, 1592,

     1047, 1467, 1368, 1762, 1836, 1586, 1591, 1594, 1461, 1610,
     1595, 1542, 1596, 1597, 1597, 1597, 1869, 1598, 1599, 1600,
     1601, 1602, 1050, 1278, 1597, 1603, 1602, 1602, 1602, 1602,
     1602, 1602, 1602, 1602, 1602, 1604, 1602, 1602, 1602, 1605,
     1606, 1602, 1602, 1602, 1043, 1043, 1043, 1043, 1060, 1467,
     1467, 1467, 1287, 1473,  243, 1712, 1712, 1469, 1469, 1469,
     1471, 1612, 1060, 1060, 1060, 1060, 1064, 1473, 1473, 1473,
     1296,  243, 1368, 1794,  896, 1475, 1475, 1475, 1477, 1303,
     1836,  243, 1660, 1668,  243, 1716, 1712, 1305, 1067, 1481,
     1560, 1615, 1670, 1616, 1617, 1617, 1617, 1707, 1618, 1619,

     1620, 1621, 1622, 1836, 1682, 1617, 1623, 1622, 1622, 1622,
     1622, 1622, 1622, 1622, 1622, 1622, 1624, 1622, 1622, 1622,
     1625, 1626, 1622, 1622, 1622,  896,  912,  912,  928,  928,
     1303, 1309, 1309, 1315, 1315,  243, 1836, 1848, 1483, 1311,
     1485, 1317, 1487, 1321, 1321, 1321, 1321,  939, 1627, 1490,
     1490, 1490, 1331, 1461, 1841, 1694, 1629, 1631, 1492, 1492,
     1333,  939, 1337, 1337, 1337, 1337, 1331, 1633, 1499, 1499,
     1499,  243, 1712, 1718, 1496, 1635, 1637, 1501, 1501,  951,
      951, 1353, 1353, 1353, 1347, 1347, 1639, 1508, 1508,  243,
     1667, 1715, 1349, 1505, 1641, 1643, 1510, 1353, 1645, 1364,

     1364, 1364, 1508, 1646, 1655, 1527, 1527, 1712, 1836, 1823,
     1510, 1648, 1657, 1659, 1529, 1364, 1661,  968,  968, 1381,
     1527, 1662, 1375, 1375, 1671, 1836, 1870, 1842, 1529, 1664,
     1377, 1545, 1673, 1381, 1381, 1381,  979,  979, 1548, 1548,
     1548, 1391, 1391, 1876, 1839, 1738, 1675, 1550, 1550, 1393,
     1554, 1397, 1397, 1397, 1397,  996, 1677, 1557, 1557, 1557,
     1407, 1879, 1880, 1802, 1679, 1681, 1559, 1559, 1409,  996,
     1413, 1413, 1413, 1413, 1407, 1683, 1566, 1566, 1566, 1836,
     1891, 1879, 1563, 1685, 1687, 1568, 1568, 1007, 1007, 1429,
     1429, 1429, 1423, 1423, 1689, 1575, 1575,  243, 1890, 1886,

     1425, 1572, 1691, 1693, 1577, 1429, 1578, 1024, 1024, 1445,
     1575, 1445, 1439, 1439, 1695, 1894, 1584, 1894, 1577,   22,
     1441, 1581, 1697, 1445, 1699, 1445, 1457, 1457, 1584, 1457,
     1584, 1702, 1592, 1712, 1592, 1712, 1586, 1712, 1586, 1704,
     1706, 1457, 1594, 1708, 1707, 1713, 1592, 1712, 1709,   51,
     1461,  243, 1043,   69, 1594, 1043, 1711, 1467, 1707, 1607,
     1467, 1715, 1060,  243, 1060, 1469, 1732, 1473, 1610, 1473,
     1357, 1733, 1761, 1343,  121, 1475, 1899, 1612, 1613, 1735,
     1719,  135, 1720, 1721, 1721, 1721,  163, 1722, 1723, 1724,
     1725, 1726, 1360, 1890, 1721, 1727, 1726, 1726, 1726, 1726,

     1726, 1726, 1726, 1726, 1726, 1728, 1726, 1726, 1726, 1729,
     1730, 1726, 1726, 1726, 1321, 1321, 1321, 1321, 1321, 1627,
     1627, 1627, 1627, 1490,  205, 1891, 1899, 1742, 1629, 1629,
     1629, 1631, 1337, 1337, 1337, 1337, 1337, 1633, 1633, 1633,
     1633, 1499, 1897, 1897,  224, 1744, 1635, 1635, 1635, 1637,
     1353, 1353, 1353, 1353, 1353, 1639, 1639, 1639, 1639, 1508,
      264,  283,  340, 1746, 1641, 1641, 1641, 1643, 1645, 1645,
     1364, 1364, 1364, 1646, 1749, 1655, 1655, 1655,  393,  406,
      419, 1748, 1751, 1755, 1657, 1657, 1364, 1364, 1661, 1661,
     1368, 1655, 1527, 1662, 1758, 1824, 1836,  432, 1381, 1657,

     1659, 1757, 1760, 1671, 1381, 1381, 1825, 1831, 1381, 1671,
     1671, 1764, 1371, 1671, 1381, 1397,  444, 1673, 1673, 1548,
     1677, 1673,  243, 1836, 1397, 1397, 1397, 1675, 1766, 1677,
     1677, 1677,  243,  456, 1831, 1397, 1413, 1679, 1679, 1679,
     1557, 1683, 1413,  462, 1403, 1413, 1413, 1683, 1681, 1768,
     1683, 1683, 1413, 1836, 1435, 1685, 1429, 1566, 1685, 1685,
      474, 1689, 1429, 1429, 1831, 1687, 1429, 1689, 1689, 1770,
     1461, 1689, 1429, 1445,  488, 1691, 1691, 1575, 1695, 1691,
      507, 1712, 1445, 1445, 1445, 1693, 1772, 1695, 1695, 1695,
     1793,  517, 1464, 1445, 1457, 1697, 1697, 1697, 1584, 1702,

     1457, 1836, 1836, 1457, 1457, 1702, 1699, 1775, 1702, 1702,
     1457,  526, 1836, 1704, 1708, 1592, 1704, 1704, 1836, 1709,
     1708, 1869, 1894, 1706, 1796, 1778, 1837, 1777, 1839, 1797,
     1840, 1278,  541, 1780, 1712,  552, 1781, 1799, 1782, 1783,
     1783, 1783,  564, 1784, 1785, 1786, 1787, 1788,  577, 1278,
     1783, 1789, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1790, 1788, 1788, 1788, 1791, 1792, 1788, 1788, 1788,
     1732, 1732, 1321, 1321, 1337, 1733, 1807, 1627, 1627, 1633,
      589,  601,  618, 1806, 1809, 1629, 1742, 1635, 1337, 1353,
     1353, 1645, 1645, 1633, 1639, 1639, 1812, 1749,  629,  639,

      646, 1744, 1641, 1746, 1814, 1816, 1645, 1645, 1364, 1364,
     1661, 1749, 1749, 1655, 1655, 1818,  667,  679,  686, 1751,
     1751, 1657, 1755, 1820, 1661, 1661, 1661, 1381, 1381, 1758,
     1758, 1758, 1671, 1671,  698,  705,  717, 1822, 1760, 1760,
     1673, 1764, 1397, 1397, 1413, 1413, 1429, 1677, 1677, 1683,
     1683, 1689,  730,  743,  748, 1679, 1766, 1685, 1768, 1691,
     1429, 1445, 1445, 1457, 1457, 1689, 1695, 1695, 1702, 1702,
      760,  773,  779, 1770, 1697, 1772, 1704, 1775, 1708, 1899,
     1708, 1708, 1708, 1826, 1899, 1778, 1778, 1778,  791,  804,
      810, 1828, 1777, 1830, 1780, 1780, 1832, 1796, 1796, 1899,

     1732, 1833, 1797, 1845, 1899, 1850,  822,  833,  845, 1835,
     1844, 1847, 1799, 1852, 1899, 1732, 1732, 1732, 1645, 1899,
     1807, 1807, 1807, 1812,  852,  864,  874, 1806, 1854, 1809,
     1809, 1857, 1645, 1645, 1645, 1645, 1661, 1812, 1812, 1812,
     1749, 1818,  876,  878, 1836, 1814, 1814, 1814, 1816, 1859,
     1661, 1661, 1661, 1661,  243, 1818, 1818, 1818, 1758, 1278,
      898,  914, 1708, 1820, 1820, 1820, 1822, 1826, 1708, 1708,
      930,  941, 1708, 1826, 1826, 1863, 1667, 1826, 1708, 1832,
      953, 1828, 1828, 1778, 1833, 1828, 1712,  970, 1832, 1899,
     1796, 1830, 1865, 1866, 1899, 1871, 1836,  981,  998, 1899,

     1796, 1868, 1835, 1873, 1899, 1845, 1796, 1009, 1715, 1796,
     1732, 1845, 1844, 1875, 1845, 1850, 1732, 1026, 1839, 1847,
     1732, 1850, 1847, 1878, 1045, 1850, 1732, 1732, 1062, 1852,
     1645, 1850, 1807, 1852, 1081, 1812, 1645, 1661, 1090, 1852,
     1854, 1812, 1818, 1814, 1099, 1111, 1661, 1708, 1708, 1857,
     1820, 1818, 1826, 1826, 1118, 1130, 1137, 1832, 1899, 1859,
     1828, 1863, 1881, 1899, 1832, 1149, 1162, 1832, 1832, 1866,
     1883, 1865, 1866, 1866, 1796, 1170, 1182, 1885, 1796, 1871,
     1868, 1868, 1189, 1871, 1796, 1796, 1201, 1888, 1796, 1871,
     1871, 1873, 1210, 1845, 1732, 1732, 1222, 1873, 1873, 1850,

     1850, 1875, 1229, 1241, 1832, 1832, 1832, 1852, 1878, 1881,
     1881, 1881, 1250, 1262, 1277, 1832, 1832, 1893, 1883, 1883,
     1881, 1866, 1796, 1285, 1294, 1796, 1832, 1871, 1883, 1885,
     1871, 1881, 1832, 1323, 1339, 1873, 1355, 1881, 1888, 1883,
     1366, 1383, 1399, 1415, 1431, 1893,   21, 1447,   21, 1459,
       21,   79,   79, 1479,   79,   84, 1488,   84, 1497,   84,
       92, 1506, 1518,   92,   92,  100,  100, 1525,  100,  104,
     1537,  104, 1546,  104,  109,  109, 1555,  109,  112,  112,
     1564,  112,  147, 1573,  147, 1582,  147,  151,  151, 1590,
      151,  154,  154, 1602,  154,  171,  171, 1622,  171,  173,

      173, 1647,  173,  178,  178, 1663,  178,  182, 1710,  182,
     1726,  182,  189,  189, 1734,  189,  193, 1747,  193, 1756,
      193,  215, 1788, 1613, 1461,  215,  234,  234, 1461,  234,
      236,  236, 1607,  236,  241,  241, 1460,  241,  245, 1461,
      245, 1461,  245,  250,  250, 1589,  250,  252,  252, 1451,
      252,  255,  255, 1588,  255,  271,  271, 1587,  271,  274,
      274, 1448,  274,  293,  293,  243,  293,  298,  243,  298,
     1578,  298,  308, 1432,  308,  243,  308,  312,  312,  243,
      312,  317, 1419,  317, 1570,  317,  326,  326, 1569,  326,
      328,  328, 1416,  328,  331,  331,  243,  331,  348,  348,

      243,  348,  350,  350, 1560,  350,  355,  355, 1400,  355,
      359,  243,  359,  243,  359,  365,  365, 1387,  365,  367,
      367, 1552,  367,  372,  372, 1551,  372,  376, 1384,  376,
     1368,  376,  381,  381, 1368,  381,  384,  384, 1542,  384,
      462,  462, 1367,  462,  465,  465, 1368,  465,  500,  500,
     1368,  500,  502,  502, 1357,  502,  507,  507, 1357,  507,
      510, 1523,  510,  515,  515, 1356,  515,  517,  517, 1357,
      517,  520,  520, 1357,  520,  524,  524,  243,  524,  526,
      526,  243,  526,  529,  529, 1502,  529,  534,  534, 1340,
      534,  536,  536,  243,  536,  541,  541,  243,  541,  545,

     1327,  545, 1494,  545,  552,  552, 1493,  552,  556, 1324,
      556,  902,  556,  298, 1295,  298, 1286,  298,  564,  564,
     1279,  564,  569, 1461,  569, 1461,  569,   21, 1456,   21,
     1455,   21,  577,  577, 1453,  577,  582, 1452,  582, 1451,
      582,  589,  589, 1263,  589,  594, 1444,  594, 1444,  594,
      601,  601, 1444,  601,  605, 1449,  605, 1444,  605,  611,
      611, 1251,  611,  613,  613, 1242,  613,  465,  465,  243,
      465,  618,  618,  243,  618,  622, 1428,  622, 1230,  622,
      629,  629, 1421,  629,  633, 1420,  633, 1419,  633,  317,
     1223,  317, 1412,  317,  639, 1412, 1412, 1417,  639,  644,

      644, 1412,  644,  500,  500, 1211,  500,  502,  502, 1202,
      502,  646,  646,  243,  646,  649,  649,  243,  649,  510,
     1396,  510,  245, 1190,  245, 1389,  245,  348,  348, 1388,
      348,  515,  515, 1387,  515,  654,  654, 1183,  654,  656,
      656, 1380,  656,  520,  520, 1380,  520,  359, 1380,  359,
     1385,  359,  365,  365, 1380,  365,  524,  524, 1171,  524,
      660,  660, 1163,  660,  662,  662, 1368,  662,  529,  529,
     1368,  529,  376, 1363,  376, 1150,  376,  665,  665, 1357,
      665,  534,  534, 1357,  534,  536,  536, 1352,  536,  667,
      667, 1138,  667,  670,  670, 1131,  670,  545,  243,  545,

      243,  545,  686,  686, 1336,  686,  689,  689, 1119,  689,
      556, 1329,  556, 1328,  556,  298, 1327,  298, 1112,  298,
      705,  705, 1320,  705,  708,  708, 1320,  708,  569, 1320,
      569, 1325,  569,  748,  748, 1320,  748,  751,  751, 1100,
      751,  582, 1091,  582, 1308,  582,  779,  779, 1086,  779,
      782,  782, 1082,  782,  594, 1075,  594, 1301,  594,  810,
      810, 1064,  810,  813,  813, 1064,  813,  605, 1299,  605,
     1063,  605,  831,  831, 1064,  831,  611,  611, 1064,  611,
      613,  613, 1047,  613,  833,  833, 1047,  833,  836,  836,
     1290,  836,  622, 1046,  622, 1047,  622,  852,  852, 1047,

      852,  855,  855, 1269,  855,  633, 1028,  633, 1028,  633,
      317, 1267,  317, 1027,  317,  873, 1028,  873, 1028,  873,
      874, 1011, 1011, 1246,  874,  876, 1010, 1011, 1011,  876,
      878, 1000, 1000, 1227,  878,  500,  500,  999,  500,  644,
      644, 1000,  644,  881,  881, 1000,  881,  883,  883,  983,
      883,  649,  649,  983,  649,  510, 1206,  510,  886,  886,
      982,  886,  654,  654,  983,  654,  656,  656,  983,  656,
      359,  972,  359,  972,  359,  888,  888, 1187,  888,  660,
      660,  971,  660,  662,  662,  972,  662,  376,  972,  376,
      955,  376,  534,  534,  955,  534,  665,  665, 1154,  665,

      891,  891,  954,  891,  893,  893,  955,  893,  670,  670,
      955,  670,  898,  898,  943,  898,  901,  943,  901,  545,
     1135,  545,  942,  545,  907,  907,  943,  907,  909,  909,
      943,  909,  689,  689,  932,  689,  914,  914,  932,  914,
      917, 1116,  917,  931,  917,  556,  932,  556,  932,  556,
      923,  923,  243,  923,  925,  925,  243,  925,  708,  708,
     1095,  708,  930,  930,  915,  930,  934,  243,  934,  243,
      934,  941,  941,  902,  941,  945, 1087,  945, 1086,  945,
      569,  899,  569,  511,  569,  953,  953,  879,  953,  958,
     1075,  958,  877,  958,  963,  963,  875,  963,  965,  965,

      872,  965,  751,  751, 1071,  751,  970,  970,  865,  970,
      974, 1064,  974, 1064,  974,  981,  981, 1059,  981,  985,
      853,  985,  846,  985,  582, 1047,  582, 1047,  582,  991,
      991, 1042,  991,  993,  993,  834,  993,  782,  782, 1036,
      782,  998,  998, 1035,  998, 1002,  823, 1002, 1028, 1002,
     1009, 1009, 1028, 1009, 1013, 1023, 1013,  811, 1013,  594,
      805,  594, 1011,  594, 1019, 1019, 1011, 1019, 1021, 1021,
     1006, 1021,  813,  813,  792,  813, 1026, 1026, 1000, 1026,
     1030, 1000, 1030,  995, 1030,  605,  780,  605,  774,  605,
      611,  611,  983,  611,  831,  831,  983,  831, 1038, 1038,

      978, 1038, 1040, 1040,  761, 1040,  836,  836,  972,  836,
     1045, 1045,  972, 1045, 1049,  967, 1049,  749, 1049,  622,
      744,  622,  955,  622, 1055, 1055,  955, 1055, 1057, 1057,
      950, 1057,  855,  855,  731,  855, 1062, 1062,  943, 1062,
     1066,  943, 1066,  938, 1066,  633,  718,  633,  932,  633,
      873,  932,  873,  927,  873, 1073,  706, 1073, 1074,  699,
     1074, 1076,  243, 1076,  243, 1076, 1077, 1077,  911, 1077,
      881,  881,  687,  881,  883,  883,  904,  883,  510,  903,
      510,  654,  654,  902,  654,  886,  886,  680,  886,  660,
      660,  895,  660,  888,  888,  895,  888, 1079, 1079,  895,

     1079,  891,  891,  900,  891,  893,  893,  895,  893, 1081,
     1081,  668, 1081, 1084, 1084,  885, 1084,  901,  651,  901,
      545,  647,  545,  640,  545, 1088, 1088,  872, 1088,  907,
      907,  871,  907,  909,  909,  631,  909, 1090, 1090,  631,
     1090, 1093, 1093,  869, 1093,  917,  630,  917,  631,  917,
      556,  631,  556,  620,  556, 1097, 1097,  620, 1097,  923,
      923,  850,  923,  925,  925,  619,  925, 1099, 1099,  620,
     1099, 1102, 1102,  620, 1102,  934,  603,  934,  603,  934,
     1118, 1118,  827, 1118, 1121, 1121,  602, 1121,  945,  603,
      945,  603,  945,  569,  591,  569,  591,  569, 1137, 1137,

      796, 1137, 1140, 1140,  590, 1140,  958,  591,  958,  591,
      958, 1168, 1168,  579, 1168,  963,  963,  579,  963,  965,
      965,  765,  965, 1170, 1170,  578, 1170, 1173, 1173,  579,
     1173,  974,  579,  974,  566,  974, 1189, 1189,  566, 1189,
     1192, 1192,  722, 1192,  985,  565,  985,  566,  985,  582,
      566,  582,  554,  582, 1208, 1208,  554, 1208,  991,  991,
      703,  991,  993,  993,  553,  993, 1210, 1210,  554, 1210,
     1213, 1213,  554, 1213, 1002,  543, 1002,  543, 1002, 1229,
     1229,  684, 1229, 1232, 1232,  542, 1232, 1013,  543, 1013,
      543, 1013,  594,  527,  594,  518,  594, 1248, 1248,  511,

     1248, 1019, 1019,  652, 1019, 1021, 1021,  651, 1021, 1250,
     1250,  508, 1250, 1253, 1253,  643, 1253, 1030,  642, 1030,
      641, 1030,  605,  638,  605,  489,  605, 1283, 1283,  631,
     1283, 1038, 1038,  631, 1038, 1040, 1040,  626, 1040, 1285,
     1285,  475, 1285, 1288, 1288,  620, 1288, 1049,  620, 1049,
      615, 1049,  622,  463,  622,  609,  622, 1292, 1292,  457,
     1292, 1055, 1055,  603, 1055, 1057, 1057,  603, 1057, 1294,
     1294,  598, 1294, 1297, 1297,  445, 1297, 1066,  591, 1066,
      591, 1066,  633,  586,  633,  433,  633, 1073,  579, 1073,
     1074,  579, 1074, 1076,  574, 1076,  573, 1076,  881,  881,

      420,  881, 1077, 1077,  566, 1077,  891,  891,  566,  891,
     1079, 1079,  561, 1079, 1304, 1304,  407, 1304, 1306, 1306,
      554, 1306, 1084, 1084,  554, 1084,  901,  549,  901,  907,
      907,  394,  907, 1088, 1088,  543, 1088, 1310, 1310,  543,
     1310, 1312, 1312,  538, 1312, 1093, 1093,  374, 1093,  917,
      374,  917,  531,  917,  923,  923,  374,  923, 1097, 1097,
      374, 1097, 1316, 1316,  357, 1316, 1318, 1318,  357, 1318,
     1102, 1102,  522, 1102, 1323, 1323,  357, 1323, 1326,  357,
     1326,  934,  513,  934,  512,  934, 1332, 1332,  511, 1332,
     1334, 1334,  341, 1334, 1121, 1121,  504, 1121, 1339, 1339,

      504, 1339, 1342,  504, 1342,  509, 1342,  945,  504,  945,
      498,  945, 1348, 1348,  497, 1348, 1350, 1350,  496, 1350,
     1140, 1140,  495, 1140, 1355, 1355,  494, 1355, 1359,  314,
     1359,  314, 1359, 1366, 1366,  480, 1366, 1370,  314, 1370,
      314, 1370,  958,  307,  958,  295,  958,  963,  963,  295,
      963, 1168, 1168,  398, 1168, 1376, 1376,  295, 1376, 1378,
     1378,  295, 1378, 1173, 1173,  284, 1173, 1383, 1383,  374,
     1383, 1386,  374, 1386,  974,  369,  974,  265,  974, 1392,
     1392,  357, 1392, 1394, 1394,  357, 1394, 1192, 1192,  352,
     1192, 1399, 1399,  243, 1399, 1402,  243, 1402,  345, 1402,

      985,  243,  985,  243,  985,  991,  991,  325,  991, 1208,
     1208,  324, 1208, 1408, 1408,  323, 1408, 1410, 1410,  225,
     1410, 1213, 1213,  314, 1213, 1415, 1415,  314, 1415, 1418,
      309, 1418, 1002,  307, 1002,  306, 1002, 1424, 1424,  305,
     1424, 1426, 1426,  304, 1426, 1232, 1232,  302, 1232, 1431,
     1431,  206, 1431, 1434,  295, 1434,  295, 1434, 1013,  290,
     1013,  191, 1013, 1019, 1019,  191, 1019, 1248, 1248,  288,
     1248, 1440, 1440,  191, 1440, 1442, 1442,  191, 1442, 1253,
     1253,  180, 1253, 1447, 1447,  180, 1447, 1450,  269, 1450,
     1030,  180, 1030,  180, 1030, 1459, 1459,  164, 1459, 1463,

      243, 1463,  243, 1463, 1038, 1038,  238, 1038, 1283, 1283,
      146, 1283, 1468, 1468,  136, 1468, 1470, 1470,  191, 1470,
     1288, 1288,  191, 1288, 1049,  186, 1049,  122, 1049, 1055,
     1055,  180, 1055, 1292, 1292,  180, 1292, 1474, 1474,  175,
     1474, 1476, 1476,  102, 1476, 1297, 1297,  102, 1297, 1066,
      168, 1066,  102, 1066, 1479,  102,  150,  149, 1479, 1482,
     1482,  148, 1482, 1304, 1304,  146, 1304, 1306, 1306,   81,
     1306,  901,   81,  901, 1484, 1484,  127, 1484, 1310, 1310,
       81, 1310, 1312, 1312,   81, 1312,  917,   58,  917,   70,
      917, 1486, 1486,  102, 1486, 1316, 1316,  102, 1316, 1318,

     1318,   97, 1318, 1488, 1488,   96, 1488, 1491, 1491,   94,
     1491, 1326,   52, 1326,  934,   81,  934,   81,  934, 1495,
     1495,   76, 1495, 1332, 1332,   75, 1332, 1334, 1334,   61,
     1334, 1497, 1497,   41, 1497, 1500, 1500,   40, 1500, 1342,
       35, 1342,   23, 1342,  945,   20,  945,   20,  945, 1504,
     1504,   31, 1504, 1348, 1348,   18, 1348, 1350, 1350,   23,
     1350, 1506, 1506,   20, 1506, 1509, 1509,   19, 1509, 1359,
       18, 1359, 1899, 1359, 1525, 1525, 1899, 1525, 1528, 1528,
     1899, 1528, 1370, 1899, 1370, 1899, 1370,  958, 1899,  958,
     1899,  958, 1544, 1544, 1899, 1544, 1376, 1376, 1899, 1376,

     1378, 1378, 1899, 1378, 1546, 1546, 1899, 1546, 1549, 1549,
     1899, 1549, 1386, 1899, 1386,  974, 1899,  974, 1899,  974,
     1553, 1553, 1899, 1553, 1392, 1392, 1899, 1392, 1394, 1394,
     1899, 1394, 1555, 1555, 1899, 1555, 1558, 1558, 1899, 1558,
     1402, 1899, 1402, 1899, 1402,  985, 1899,  985, 1899,  985,
     1562, 1562, 1899, 1562, 1408, 1408, 1899, 1408, 1410, 1410,
     1899, 1410, 1564, 1564, 1899, 1564, 1567, 1567, 1899, 1567,
     1418, 1899, 1418, 1002, 1899, 1002, 1899, 1002, 1571, 1571,
     1899, 1571, 1424, 1424, 1899, 1424, 1426, 1426, 1899, 1426,
     1573, 1573, 1899, 1573, 1576, 1576, 1899, 1576, 1434, 1899,

     1434, 1899, 1434, 1013, 1899, 1013, 1899, 1013, 1580, 1580,
     1899, 1580, 1440, 1440, 1899, 1440, 1442, 1442, 1899, 1442,
     1582, 1582, 1899, 1582, 1585, 1585, 1899, 1585, 1450, 1899,
     1450, 1030, 1899, 1030, 1899, 1030, 1590, 1590, 1899, 1590,
     1593, 1593, 1899, 1593, 1463, 1899, 1463, 1899, 1463, 1609,
     1609, 1899, 1609, 1468, 1468, 1899, 1468, 1470, 1470, 1899,
     1470, 1049, 1899, 1049, 1899, 1049, 1611, 1611, 1899, 1611,
     1474, 1474, 1899, 1474, 1476, 1476, 1899, 1476, 1066, 1899,
     1066, 1899, 1066, 1614, 1899, 1614, 1899, 1614, 1304, 1304,
     1899, 1304, 1482, 1482, 1899, 1482, 1310, 1310, 1899, 1310,

     1484, 1484, 1899, 1484, 1316, 1316, 1899, 1316, 1486, 1486,
     1899, 1486, 1628, 1628, 1899, 1628, 1630, 1630, 1899, 1630,
     1491, 1491, 1899, 1491, 1326, 1899, 1326, 1332, 1332, 1899,
     1332, 1495, 1495, 1899, 1495, 1634, 1634, 1899, 1634, 1636,
     1636, 1899, 1636, 1500, 1500, 1899, 1500, 1342, 1899, 1342,
     1899, 1342, 1348, 1348, 1899, 1348, 1504, 1504, 1899, 1504,
     1640, 1640, 1899, 1640, 1642, 1642, 1899, 1642, 1509, 1509,
     1899, 1509, 1647, 1647, 1899, 1647, 1650, 1899, 1650, 1359,
     1899, 1359, 1899, 1359, 1656, 1656, 1899, 1656, 1658, 1658,
     1899, 1658, 1528, 1528, 1899, 1528, 1663, 1663, 1899, 1663,

     1666, 1899, 1666, 1899, 1666, 1370, 1899, 1370, 1899, 1370,
     1376, 1376, 1899, 1376, 1544, 1544, 1899, 1544, 1672, 1672,
     1899, 1672, 1674, 1674, 1899, 1674, 1549, 1549, 1899, 1549,
     1386, 1899, 1386, 1392, 1392, 1899, 1392, 1553, 1553, 1899,
     1553, 1678, 1678, 1899, 1678, 1680, 1680, 1899, 1680, 1558,
     1558, 1899, 1558, 1402, 1899, 1402, 1899, 1402, 1408, 1408,
     1899, 1408, 1562, 1562, 1899, 1562, 1684, 1684, 1899, 1684,
     1686, 1686, 1899, 1686, 1567, 1567, 1899, 1567, 1418, 1899,
     1418, 1424, 1424, 1899, 1424, 1571, 1571, 1899, 1571, 1690,
     1690, 1899, 1690, 1692, 1692, 1899, 1692, 1576, 1576, 1899,

     1576, 1434, 1899, 1434, 1899, 1434, 1440, 1440, 1899, 1440,
     1580, 1580, 1899, 1580, 1696, 1696, 1899, 1696, 1698, 1698,
     1899, 1698, 1585, 1585, 1899, 1585, 1450, 1899, 1450, 1703,
     1703, 1899, 1703, 1705, 1705, 1899, 1705, 1593, 1593, 1899,
     1593, 1710, 1710, 1899, 1710, 1714, 1899, 1714, 1899, 1714,
     1463, 1899, 1463, 1899, 1463, 1468, 1468, 1899, 1468, 1609,
     1609, 1899, 1609, 1474, 1474, 1899, 1474, 1611, 1611, 1899,
     1611, 1614, 1899, 1614, 1899, 1614, 1734, 1734, 1899, 1734,
     1737, 1899, 1737, 1741, 1741, 1899, 1741, 1628, 1628, 1899,
     1628, 1630, 1630, 1899, 1630, 1326, 1899, 1326, 1743, 1743,

     1899, 1743, 1634, 1634, 1899, 1634, 1636, 1636, 1899, 1636,
     1342, 1899, 1342, 1899, 1342, 1745, 1745, 1899, 1745, 1640,
     1640, 1899, 1640, 1642, 1642, 1899, 1642, 1747, 1747, 1899,
     1747, 1750, 1750, 1899, 1750, 1650, 1899, 1650, 1359, 1899,
     1359, 1899, 1359, 1754, 1754, 1899, 1754, 1656, 1656, 1899,
     1656, 1658, 1658, 1899, 1658, 1756, 1756, 1899, 1756, 1759,
     1759, 1899, 1759, 1666, 1899, 1666, 1899, 1666, 1370, 1899,
     1370, 1899, 1370, 1763, 1763, 1899, 1763, 1672, 1672, 1899,
     1672, 1674, 1674, 1899, 1674, 1386, 1899, 1386, 1765, 1765,
     1899, 1765, 1678, 1678, 1899, 1678, 1680, 1680, 1899, 1680,

     1402, 1899, 1402, 1899, 1402, 1767, 1767, 1899, 1767, 1684,
     1684, 1899, 1684, 1686, 1686, 1899, 1686, 1418, 1899, 1418,
     1769, 1769, 1899, 1769, 1690, 1690, 1899, 1690, 1692, 1692,
     1899, 1692, 1434, 1899, 1434, 1899, 1434, 1771, 1771, 1899,
     1771, 1696, 1696, 1899, 1696, 1698, 1698, 1899, 1698, 1450,
     1899, 1450, 1774, 1774, 1899, 1774, 1703, 1703, 1899, 1703,
     1705, 1705, 1899, 1705, 1776, 1776, 1899, 1776, 1779, 1779,
     1899, 1779, 1714, 1899, 1714, 1899, 1714, 1463, 1899, 1463,
     1899, 1463, 1798, 1798, 1899, 1798, 1801, 1899, 1801, 1805,
     1805, 1899, 1805, 1808, 1808, 1899, 1808, 1737, 1899, 1737,

     1628, 1628, 1899, 1628, 1741, 1741, 1899, 1741, 1634, 1634,
     1899, 1634, 1743, 1743, 1899, 1743, 1640, 1640, 1899, 1640,
     1745, 1745, 1899, 1745, 1813, 1813, 1899, 1813, 1815, 1815,
     1899, 1815, 1750, 1750, 1899, 1750, 1650, 1899, 1650, 1656,
     1656, 1899, 1656, 1754, 1754, 1899, 1754, 1819, 1819, 1899,
     1819, 1821, 1821, 1899, 1821, 1759, 1759, 1899, 1759, 1666,
     1899, 1666, 1899, 1666, 1672, 1672, 1899, 1672, 1763, 1763,
     1899, 1763, 1678, 1678, 1899, 1678, 1765, 1765, 1899, 1765,
     1767, 1767, 1899, 1767, 1827, 1827, 1899, 1827, 1829, 1829,
     1899, 1829, 1834, 1834, 1899, 1834, 1838, 1899, 1838, 1899,

     1838, 1843, 1843, 1899, 1843, 1846, 1846, 1899, 1846, 1851,
     1851, 1899, 1851, 1853, 1853, 1899, 1853, 1856, 1856, 1899,
     1856, 1858, 1858, 1899, 1858, 1862, 1862, 1899, 1862, 1864,
     1864, 1899, 1864, 1867, 1867, 1899, 1867, 1872, 1872, 1899,
     1872, 1874, 1874, 1899, 1874, 1877, 1877, 1899, 1877, 1882,
     1882, 1899, 1882, 1884, 1884, 1899, 1884, 1887, 1887, 1899,
     1887, 1889, 1899, 1899, 1899, 1889, 1892, 1892, 1899, 1892,
     1895, 1899, 1895, 1899, 1895, 1896, 1899, 1899, 1899, 1896,
     1898, 1899, 1898,    3, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899
    } ;

static const flex_int16_t yy_chk[7424] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,   10,
       11,   12,   13,   14,   15,   16,   20,   24,   25,   33,
       27,   29,   28,   30,   34,   45,   36,   20,   42,   38,
       45, 1480,   15,   47,   12,   14,   11,   10,   45,   16,
       28,   47,   13,   38,   24,   27,   34,   65,   30,   25,
       33,   29,   35,   36,   35,   65,   35,   35,   35,   35,
       42,   35,   35,   35,   35,   35,   39,   37,   35,   35,

       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       35,   35,   35,   35,   35,   35,   35,   35,   37, 1489,
       48,  229,   39,   41,  229,   41,   49,   41,   41,   41,
       41,   48,   41,   41,   41,   41,   41,   49,   53,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   50,
       54,   55,   56,   58,   53,   57,   66,   67,   63,   60,
       50,   68,   71,   63,   58,   72,   75,   66,   67,   55,
       58,   63,   68,   73,   88,   86,   90,   75,   57,   54,
       57,   60,   78,   89,   56,   79,   57,   78,   71,   91,

       79,   73,   80,   86,   72,   78,  106,   80,   79,  117,
       88,   87,   75,   90, 1493,   80,   81,  117,   81,   89,
       81,   81,   81,   81,  106,   81,   81,   81,   81,   81,
       87,   91,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   83, 1494,   83,  118,   83,   83,   83,
       83, 1498,   83,   83,   83,   83,   83,  118,  123,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       93,   99,  100,  101,  123,  143,   99,  100,  101,  148,

      119,   93, 1507,  107,   99,  100,  101,   93,  102, 1511,
      102,  119,  102,  102,  102,  102,  148,  102,  102,  102,
      102,  102,  107,  143,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  109,  110,  111,  112,  113,  109,
      110,  111,  112,  113,  120,  124,  125,  109,  110,  111,
      112,  113,  115,  127,  129,  120,  137,  115,  131,  129,
      132,  133,  127,  138,  125,  115,  131,  129,  134,  139,
      140,  132,  133,  146,  124,  150,  144,  159,  160,  134,
      142, 1514,  137,  150,  146,  159,  150,  139,  150,  160,

      140, 1515,  138,  141, 1516,  141, 1517,  141,  141,  141,
      141,  145,  141,  141,  141,  141,  141,  142,  144,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  161,
      216,  145,  149, 1519,  149,  162,  149,  149,  149,  149,
      161,  149,  149,  149,  149,  149,  162,  216,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  151,  152,
      153,  154,  155,  151,  152,  153,  154,  155,  165,  166,
      167,  151,  152,  153,  154,  155,  157,  168,  170,  169,

      171,  157,  172,  170, 1520,  171,  168,  172,  167,  157,
      197,  170,  173,  171,  165,  172,  174,  173,  166,  169,
      184,  174,  177,  178,  185,  173,  179,  177,  178,  174,
      195,  179,  197,  201, 1521,  177,  178,  209,  184,  179,
      180,  201,  180,  185,  180,  180,  180,  180,  195,  180,
      180,  180,  180,  180,  207,  209,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  188,  189,  190,
      207,  199,  188,  189,  190,  202,  199, 1522,  196, 1526,
      188,  189,  190,  191,  199,  191,  202,  191,  191,  191,

      191, 1530,  191,  191,  191,  191,  191,  196,  208,  191,
      191,  191,  191,  191,  191,  191,  191,  191,  191,  191,
      191,  191,  191,  191,  191,  191,  191,  191,  191,  191,
      203,  204,  211,  218,  221,  220,  222,  208,  218,  226,
      223,  203,  204,  220,  227,  221,  218,  222,  228,  233,
      211,  223,  266, 1532,  233,  234,  235,  270,  236,  237,
      234,  235,  233,  236,  237,  226,  228,  247,  234,  235,
      240,  236,  237,  227,  241,  240,  242,  270,  266,  241,
      260,  242,  249,  240,  269,  247,  248,  241,  260,  242,
      243, 1537,  243,  269,  243,  243,  243,  243, 1538,  243,

      243,  243,  243,  243,  249,  248,  243,  243,  243,  243,
      243,  243,  243,  243,  243,  243,  243,  243,  243,  243,
      243,  243,  243,  243,  243,  243,  250,  251,  252,  253,
      254,  250,  251,  252,  253,  254,  261,  262,  267,  250,
      251,  252,  253,  254,  255,  256,  258,  261,  262,  255,
      256,  258,  263,  268,  279,  271,  272,  255,  256,  258,
      271,  272,  279,  263,  285,  273,  286,  267,  271,  272,
      273,  268,  274,  280,  275,  277,  287,  274,  273,  275,
      277,  281,  282,  289,  280,  274,  292,  275,  277,  288,
      285,  292,  281,  282,  287,  286,  293,  294,  288,  292,

      301,  293,  294,  289, 1547,  345, 1551,  300,  319,  293,
      294,  295,  357,  295,  345,  295,  295,  295,  295,  301,
      295,  295,  295,  295,  295,  300,  319,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  297,  357,  297,
      307,  297,  297,  297,  297, 1552,  297,  297,  297,  297,
      297,  307,  363,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  302,  363,  302,  390,  302,  302,  302,
      302,  303,  302,  302,  302,  302,  302,  390,  380,  302,

      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  320,
      380,  361, 1556,  303,  304, 1565,  304, 1569,  304,  304,
      304,  304,  396,  304,  304,  304,  304,  304,  320,  361,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  304,
      305,  396,  305,  391,  305,  305,  305,  305,  409,  305,
      305,  305,  305,  305,  391,  422,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  306,  409,  306,  392,

      306,  306,  306,  306,  422,  306,  306,  306,  306,  306,
      392, 1570,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  311,  312,  313,  389,  326,  311,  312,  313,
      403,  326,  346,  389,  362,  311,  312,  313,  314,  326,
      314,  403,  314,  314,  314,  314, 1574,  314,  314,  314,
      314,  314,  346,  362,  314,  314,  314,  314,  314,  314,
      314,  314,  314,  314,  314,  314,  314,  314,  314,  314,
      314,  314,  314,  314,  314,  316, 1583,  316,  404,  316,
      316,  316,  316, 1587,  316,  316,  316,  316,  316,  404,

     1588,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  327,  328,  329,  330,  331,  327,  328,  329,
      330,  331,  378,  379, 1047,  327,  328,  329,  330,  331,
      332,  334,  347,  348,  349,  332,  334,  347,  348,  349,
      378,  397,  379,  332,  334,  347,  348,  349,  350,  351,
      354,  355,  356,  350,  351,  354,  355,  356,  410,  397,
     1047,  350,  351,  354,  355,  356,  364,  365,  366,  367,
      368,  364,  365,  366,  367,  368,  410,  395,  398,  364,
      365,  366,  367,  368,  371,  372,  373,  398,  381,  371,

      372,  373,  408,  381, 1589, 1591, 1595,  371,  372,  373,
      374,  381,  374,  395,  374,  374,  374,  374,  382,  374,
      374,  374,  374,  382,  402,  383,  374,  374,  408, 1597,
      383,  382,  402,  411,  384,  385,  421,  374,  383,  384,
      385,  374,  374,  405,  387,  400,  374,  384,  385,  387,
      400,  413,  415,  411,  405,  416,  413,  387,  400,  417,
      415,  418,  421,  423,  413,  428,  416,  429,  430,  426,
      417,  434,  418,  428,  426,  431,  435,  436,  429,  430,
      438,  423,  426,  440,  446,  438,  431,  441,  442,  443,
      447,  440,  458,  438,  448,  436,  450,  434,  441,  442,

      443,  450,  453,  452,  454,  435,  455,  459,  460,  450,
      446,  452,  448,  453,  477,  454,  462,  455,  458,  447,
      464,  462,  465,  470,  476,  464,  460,  465,  478,  462,
      471,  470,  466,  464,  468,  465,  459,  466,  472,  468,
      473,  471,  490,  477,  480,  466,  478,  468,  484,  472,
      476,  473,  482,  480,  491,  485,  484,  482,  486,  487,
      492,  493,  495,  514,  522,  482,  485,  499,  490,  486,
      487,  500,  499,  522, 1602,  523,  500,  501,  492,  495,
      499,  493,  501,  491,  500,  514,  502,  503,  506,  507,
      501,  502,  503,  506,  507,  523,  532,  531,  515,  502,

      503,  506,  507,  515,  516,  517,  531,  519,  520,  516,
      517,  515,  519,  520,  521,  547,  532,  516,  517,  521,
      519,  520, 1603,  524,  525,  526,  528,  521,  524,  525,
      526,  528,  695,  547,  548,  529,  524,  525,  526,  528,
      529,  530,  533,  695,  534,  535,  530,  533,  529,  534,
      535,  536,  558,  548,  530,  533,  536,  534,  535,  571,
      537,  540,  541,  684,  536,  537,  540,  541,  696,  560,
      558,  559,  684,  537,  540,  541,  543,  571,  543,  696,
      543,  543,  543,  543, 1614,  543,  543,  543,  543,  543,
      559,  560,  543,  543,  543,  543,  543,  543,  543,  543,

      543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
      543,  543,  551,  552,  694,  563,  572,  551,  552,  697,
      563, 1615,  694,  584,  596,  551,  552,  554,  563,  554,
      697,  554,  554,  554,  554,  572,  554,  554,  554,  554,
      554,  584,  596,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  554,  564,  714,  576,  585,  577,  564,  637,
      576, 1618,  577,  597, 1619,  714,  564,  566,  576,  566,
      577,  566,  566,  566,  566,  585,  566,  566,  566,  566,
      566,  637,  597,  566,  566,  566,  566,  566,  566,  566,

      566,  566,  566,  566,  566,  566,  566,  566,  566,  566,
      566,  566,  566,  568, 1620,  568,  715,  568,  568,  568,
      568, 1621,  568,  568,  568,  568,  568,  715,  658,  568,
      568,  568,  568,  568,  568,  568,  568,  568,  568,  568,
      568,  568,  568,  568,  568,  568,  568,  568,  568,  573,
      658,  573,  716,  573,  573,  573,  573, 1623,  573,  573,
      573,  573,  573,  716,  664,  573,  573,  573,  573,  573,
      573,  573,  573,  573,  573,  573,  573,  573,  573,  573,
      573,  573,  573,  573,  573,  579,  664,  579,  727,  579,
      579,  579,  579,  701,  579,  579,  579,  579,  579,  727,

      720,  579,  579,  579,  579,  579,  579,  579,  579,  579,
      579,  579,  579,  579,  579,  579,  579,  579,  579,  579,
      579,  581,  701,  581,  728,  581,  581,  581,  581,  720,
      581,  581,  581,  581,  581,  728, 1624,  581,  581,  581,
      581,  581,  581,  581,  581,  581,  581,  581,  581,  581,
      581,  581,  581,  581,  581,  581,  581,  588,  589,  713,
      600,  608,  588,  589, 1625,  600,  703,  713,  607,  624,
      588,  589,  591,  600,  591,  703,  591,  591,  591,  591,
      608,  591,  591,  591,  591,  591,  607,  624,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,

      591,  591,  591,  591,  591,  591,  591,  591,  593, 1626,
      593,  729,  593,  593,  593,  593, 1632,  593,  593,  593,
      593,  593,  729,  733,  593,  593,  593,  593,  593,  593,
      593,  593,  593,  593,  593,  593,  593,  593,  593,  593,
      593,  593,  593,  593,  601,  609,  722,  625,  609,  601,
     1648, 1649,  733,  726,  635,  722,  641,  601,  603,  609,
      603,  726,  603,  603,  603,  603,  625,  603,  603,  603,
      603,  603,  635,  641,  603,  603,  603,  603,  603,  603,
      603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
      603,  603,  603,  603,  610,  611,  612,  613,  614,  610,

      611,  612,  613,  614,  636,  642,  739,  610,  611,  612,
      613,  614,  617,  618,  739,  628,  700,  617,  618,  740,
      628, 1652,  642,  636,  643,  617,  618,  620,  628,  620,
      740,  620,  620,  620,  620, 1653,  620,  620,  620,  620,
      620,  643,  700,  620,  620,  620,  620,  620,  620,  620,
      620,  620,  620,  620,  620,  620,  620,  620,  620,  620,
      620,  620,  620,  620,  629,  741,  644,  920,  645,  629,
     1660,  644,  685,  645, 1661,  702,  741,  629,  631,  644,
      631,  645,  631,  631,  631,  631,  920,  631,  631,  631,
      631,  631,  685,  702,  631,  631,  631,  631,  631,  631,

      631,  631,  631,  631,  631,  631,  631,  631,  631,  631,
      631,  631,  631,  631,  631,  646,  648,  649,  650,  653,
      646,  648,  649,  650,  653,  704,  721, 1664,  646,  648,
      649,  650,  653,  654,  655,  656,  657,  659,  654,  655,
      656,  657,  659,  734,  721,  704,  654,  655,  656,  657,
      659,  660,  661,  662,  663,  665,  660,  661,  662,  663,
      665,  734,  747,  764,  660,  661,  662,  663,  665,  666,
      667,  669,  670,  671,  666,  667,  669,  670,  671,  735,
      747,  764,  666,  667,  669,  670,  671,  673,  686,  688,
      689,  690,  673,  686,  688,  689,  690, 1665,  719,  735,

      673,  686,  688,  689,  690,  692,  705,  707,  708,  709,
      692,  705,  707,  708,  709,  732,  742,  745,  692,  705,
      707,  708,  709,  711,  719,  724,  737,  742,  711,  746,
      724,  737,  748,  763, 1666,  750,  711,  748,  724,  737,
      750,  732,  751,  745,  752,  748,  754,  751,  750,  752,
      757,  754,  756,  758,  759,  751,  762,  752,  746,  754,
      756,  757,  763,  765,  758,  759,  767,  769,  775,  770,
      771,  767,  765,  772,  776,  769,  778,  777,  779,  767,
      770,  771,  762,  779,  772,  781,  793,  782,  783,  794,
      781,  779,  782,  783,  775,  777,  778,  785,  781,  787,

      782,  783,  785,  776,  788,  789,  790,  787,  795,  798,
      785,  796,  793,  800,  798,  788,  789,  790,  794,  801,
      796,  800,  798,  802,  803,  806,  795,  807,  808,  809,
      801,  810,  812,  818,  802,  803,  810,  812,  824,  819,
      847,  818,  813,  820,  810,  812,  808,  813,  814,  809,
      819,  806,  816,  814,  820,  813,  807,  816,  821,  825,
      826,  814,  827,  828,  824,  816,  847,  831,  832,  821,
     1667,  827,  831,  832,  833,  848, 1676,  835,  826,  833,
      831,  832,  835,  828,  836,  842,  837,  833,  825,  836,
      835,  837,  841,  839,  843,  849,  842,  836,  839,  837,

      841,  844,  850,  851,  848,  843,  839,  867,  866,  852,
      860,  850,  844,  849,  852,  854,  855,  868,  860,  856,
      854,  855,  852,  851,  856,  858,  861,  870,  854,  855,
      858,  862,  856,  863,  866,  868,  867,  861,  858,  869,
      872,  880,  862, 1096,  863,  881,  880,  870,  869,  872,
      881,  882,  883, 1688,  880,  884,  882,  883,  881,  905,
      884,  886,  887, 1096,  882,  883,  886,  887,  884,  921,
     1117,  888,  889,  890,  886,  887,  888,  889,  890,  949,
     1136,  905,  891,  892,  888,  889,  890,  891,  892,  893,
     1117,  921,  894,  897,  893,  891,  892,  894,  897,  898,

     1136,  949,  893,  906,  898,  894,  897, 1167,  906,  907,
      908,  937,  898,  909,  907,  908,  906,  919,  909,  910,
      913,  936,  907,  908,  910,  913,  909, 1167, 1075,  914,
      937,  922,  910,  913,  914,  919,  922, 1075,  923,  936,
      924,  925,  914,  923,  922,  924,  925,  926,  947,  948,
      929,  923,  926,  924,  925,  929,  930, 1700, 1701,  961,
      926,  930, 1095,  929, 1116,  977,  947,  960,  948,  930,
      932, 1095,  932, 1116,  932,  932,  932,  932,  961,  932,
      932,  932,  932,  932,  977,  960,  932,  932,  932,  932,
      932,  932,  932,  932,  932,  932,  932,  932,  932,  932,

      932,  932,  932,  932,  932,  932,  940,  941, 1126,  952,
      988,  940,  941, 1127,  952, 1707, 1126,  976,  987,  940,
      941,  943,  952,  943, 1127,  943,  943,  943,  943,  988,
      943,  943,  943,  943,  943,  976,  987,  943,  943,  943,
      943,  943,  943,  943,  943,  943,  943,  943,  943,  943,
      943,  943,  943,  943,  943,  943,  943,  953, 1128,  962,
     1005,  963,  953,  989,  962, 1708,  963, 1711, 1004, 1128,
      953,  955,  962,  955,  963,  955,  955,  955,  955, 1005,
      955,  955,  955,  955,  955,  989, 1004,  955,  955,  955,
      955,  955,  955,  955,  955,  955,  955,  955,  955,  955,

      955,  955,  955,  955,  955,  955,  955,  957, 1713,  957,
     1129,  957,  957,  957,  957, 1714,  957,  957,  957,  957,
      957, 1129, 1715,  957,  957,  957,  957,  957,  957,  957,
      957,  957,  957,  957,  957,  957,  957,  957,  957,  957,
      957,  957,  957,  964,  965,  966,  969,  970,  964,  965,
      966,  969,  970, 1017, 1034, 1135,  964,  965,  966,  969,
      970,  972, 1719,  972, 1135,  972,  972,  972,  972, 1722,
      972,  972,  972,  972,  972, 1017, 1034,  972,  972,  972,
      972,  972,  972,  972,  972,  972,  972,  972,  972,  972,
      972,  972,  972,  972,  972,  972,  972,  980,  981, 1145,

      990, 1016,  980,  981, 1146,  990, 1723, 1145, 1015, 1032,
      980,  981,  983,  990,  983, 1146,  983,  983,  983,  983,
     1016,  983,  983,  983,  983,  983, 1015, 1032,  983,  983,
      983,  983,  983,  983,  983,  983,  983,  983,  983,  983,
      983,  983,  983,  983,  983,  983,  983,  983,  991,  992,
      993,  994,  997,  991,  992,  993,  994,  997, 1033, 1158,
     1051,  991,  992,  993,  994,  997,  998, 1158, 1008, 1052,
     1009,  998, 1053, 1008, 1724, 1009, 1069, 1033, 1051,  998,
     1000, 1008, 1000, 1009, 1000, 1000, 1000, 1000, 1052, 1000,
     1000, 1000, 1000, 1000, 1053, 1069, 1000, 1000, 1000, 1000,

     1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
     1000, 1000, 1000, 1000, 1000, 1000, 1011, 1725, 1011, 1147,
     1011, 1011, 1011, 1011, 1727, 1011, 1011, 1011, 1011, 1011,
     1147, 1728, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
     1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
     1011, 1011, 1018, 1019, 1020, 1021, 1022, 1018, 1019, 1020,
     1021, 1022, 1068, 1134, 1133, 1018, 1019, 1020, 1021, 1022,
     1025, 1026, 1729, 1037, 1132, 1025, 1026, 1070, 1037, 1154,
     1068, 1134, 1730, 1025, 1026, 1028, 1037, 1028, 1154, 1028,
     1028, 1028, 1028, 1133, 1028, 1028, 1028, 1028, 1028, 1070,

     1132, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028,
     1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028,
     1028, 1036, 1735, 1036, 1148, 1036, 1036, 1036, 1036, 1736,
     1036, 1036, 1036, 1036, 1036, 1148, 1036, 1036, 1036, 1036,
     1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036,
     1036, 1036, 1036, 1036, 1036, 1036, 1036, 1038, 1039, 1040,
     1041, 1044, 1038, 1039, 1040, 1041, 1044, 1152, 1739, 1153,
     1038, 1039, 1040, 1041, 1044, 1045, 1054, 1055, 1056, 1057,
     1045, 1054, 1055, 1056, 1057, 1166, 1151, 1153, 1045, 1054,
     1055, 1056, 1057, 1058, 1061, 1062, 1152, 1077, 1058, 1061,

     1062, 1740, 1077, 1166, 1188, 1205, 1058, 1061, 1062, 1064,
     1077, 1064, 1151, 1064, 1064, 1064, 1064, 1748, 1064, 1064,
     1064, 1064, 1064, 1205, 1188, 1064, 1064, 1064, 1064, 1064,
     1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064,
     1064, 1064, 1064, 1064, 1064, 1064, 1078, 1079, 1080, 1081,
     1083, 1078, 1079, 1080, 1081, 1083, 1207, 1245, 1752, 1078,
     1079, 1080, 1081, 1083, 1084, 1085, 1088, 1089, 1090, 1084,
     1085, 1088, 1089, 1090, 1228, 1245, 1207, 1084, 1085, 1088,
     1089, 1090, 1092, 1093, 1094, 1097, 1098, 1092, 1093, 1094,
     1097, 1098, 1247, 1282, 1228, 1092, 1093, 1094, 1097, 1098,

     1099, 1101, 1102, 1103, 1105, 1099, 1101, 1102, 1103, 1105,
     1344, 1282, 1247, 1099, 1101, 1102, 1103, 1105, 1118, 1120,
     1121, 1122, 1124, 1118, 1120, 1121, 1122, 1124, 1344, 1753,
     1164, 1118, 1120, 1121, 1122, 1124, 1137, 1139, 1140, 1141,
     1143, 1137, 1139, 1140, 1141, 1143, 1159, 1160, 1165, 1137,
     1139, 1140, 1141, 1143, 1156, 1161, 1164, 1159, 1160, 1156,
     1168, 1757, 1187, 1169, 1197, 1168, 1161, 1156, 1169, 1170,
     1172, 1187, 1197, 1168, 1170, 1172, 1169, 1165, 1198, 1173,
     1174, 1176, 1170, 1172, 1173, 1174, 1176, 1199, 1200, 1198,
     1189, 1191, 1173, 1174, 1176, 1189, 1191, 1192, 1199, 1200,

     1193, 1195, 1192, 1189, 1191, 1193, 1195, 1203, 1204, 1206,
     1192, 1208, 1209, 1193, 1195, 1210, 1208, 1209, 1206, 1238,
     1210, 1212, 1213, 1227, 1208, 1209, 1212, 1213, 1210, 1781,
     1238, 1214, 1227, 1203, 1212, 1213, 1214, 1204, 1216, 1244,
     1229, 1231, 1232, 1216, 1214, 1229, 1231, 1232, 1239, 1240,
     1237, 1216, 1233, 1229, 1231, 1232, 1235, 1233, 1237, 1239,
     1240, 1235, 1243, 1246, 1268, 1233, 1248, 1783, 1244, 1235,
     1249, 1248, 1246, 1250, 1788, 1249, 1252, 1253, 1250, 1248,
     1254, 1252, 1253, 1249, 1268, 1254, 1250, 1256, 1243, 1252,
     1253, 1271, 1256, 1254, 1267, 1274, 1271, 1273, 1275, 1276,

     1256, 1280, 1281, 1267, 1271, 1273, 1274, 1283, 1284, 1275,
     1276, 1285, 1283, 1284, 1345, 1789, 1285, 1287, 1291, 1800,
     1283, 1284, 1287, 1288, 1285, 1803, 1290, 1280, 1288, 1289,
     1287, 1281, 1292, 1345, 1289, 1290, 1288, 1292, 1291, 1293,
     1299, 1294, 1289, 1296, 1293, 1292, 1294, 1300, 1296, 1299,
     1297, 1301, 1293, 1298, 1294, 1297, 1296, 1303, 1298, 1304,
     1302, 1314, 1303, 1297, 1304, 1503, 1298, 1300, 1301, 1302,
     1303, 1305, 1304, 1306, 1307, 1309, 1305, 1310, 1306, 1307,
     1309, 1330, 1310, 1314, 1305, 1503, 1306, 1307, 1309, 1311,
     1310, 1312, 1313, 1315, 1311, 1316, 1312, 1313, 1315, 1346,

     1316, 1361, 1311, 1330, 1312, 1313, 1315, 1317, 1316, 1318,
     1319, 1322, 1317, 1323, 1318, 1319, 1322, 1372, 1323, 1361,
     1317, 1346, 1318, 1319, 1322, 1331, 1323, 1332, 1333, 1334,
     1331, 1335, 1332, 1333, 1334, 1372, 1335, 1404, 1331, 1436,
     1332, 1333, 1334, 1338, 1335, 1339, 1347, 1348, 1338, 1349,
     1339, 1347, 1348, 1362, 1349, 1404, 1338, 1436, 1339, 1347,
     1348, 1350, 1349, 1351, 1354, 1355, 1350, 1524, 1351, 1354,
     1355, 1374, 1362, 1502, 1350, 1373, 1351, 1354, 1355, 1357,
     1804, 1357, 1502, 1357, 1357, 1357, 1357, 1524, 1357, 1357,
     1357, 1357, 1357, 1374, 1373, 1357, 1357, 1357, 1357, 1357,

     1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357,
     1357, 1357, 1357, 1357, 1357, 1365, 1366, 1533, 1375, 1405,
     1365, 1366, 1390, 1375, 1523, 1533, 1437, 1810, 1365, 1366,
     1368, 1375, 1368, 1523, 1368, 1368, 1368, 1368, 1405, 1368,
     1368, 1368, 1368, 1368, 1390, 1437, 1368, 1368, 1368, 1368,
     1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
     1368, 1368, 1368, 1368, 1368, 1368, 1376, 1377, 1378, 1379,
     1382, 1376, 1377, 1378, 1379, 1382, 1465, 1811, 1817, 1376,
     1377, 1378, 1379, 1382, 1383, 1391, 1392, 1393, 1394, 1383,
     1391, 1392, 1393, 1394, 1465, 1466, 1406, 1383, 1391, 1392,

     1393, 1394, 1395, 1398, 1399, 1539, 1407, 1395, 1398, 1399,
     1422, 1407, 1541, 1824, 1466, 1395, 1398, 1399, 1406, 1407,
     1408, 1409, 1410, 1411, 1414, 1408, 1409, 1410, 1411, 1414,
     1541, 1539, 1422, 1408, 1409, 1410, 1411, 1414, 1415, 1423,
     1424, 1425, 1426, 1415, 1423, 1424, 1425, 1426, 1534, 1606,
     1438, 1415, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1534,
     1439, 1427, 1430, 1431, 1454, 1439, 1825, 1606, 1831, 1427,
     1430, 1431, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1440,
     1441, 1442, 1443, 1446, 1535, 1668, 1454, 1440, 1441, 1442,
     1443, 1446, 1447, 1458, 1459, 1535, 1467, 1447, 1458, 1459,

     1472, 1467, 1542, 1668, 1832, 1447, 1458, 1459, 1461, 1467,
     1461, 1542, 1461, 1461, 1461, 1461, 1837, 1461, 1461, 1461,
     1461, 1461, 1472, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
     1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461, 1461,
     1461, 1461, 1461, 1461, 1468, 1469, 1470, 1471, 1473, 1468,
     1469, 1470, 1471, 1473, 1540, 1716, 1605, 1468, 1469, 1470,
     1471, 1473, 1474, 1475, 1476, 1477, 1478, 1474, 1475, 1476,
     1477, 1536, 1543, 1716, 1482, 1474, 1475, 1476, 1477, 1482,
     1838, 1560, 1536, 1540, 1561, 1605, 1599, 1482, 1478, 1481,
     1560, 1481, 1543, 1481, 1481, 1481, 1481, 1599, 1481, 1481,

     1481, 1481, 1481, 1839, 1561, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1483, 1484, 1485, 1486, 1487,
     1483, 1484, 1485, 1486, 1487, 1579, 1792, 1848, 1483, 1484,
     1485, 1486, 1487, 1488, 1490, 1491, 1492, 1495, 1488, 1490,
     1491, 1492, 1495, 1608, 1792, 1579, 1488, 1490, 1491, 1492,
     1495, 1496, 1497, 1499, 1500, 1501, 1496, 1497, 1499, 1500,
     1501, 1669, 1717, 1608, 1496, 1497, 1499, 1500, 1501, 1504,
     1505, 1506, 1508, 1509, 1504, 1505, 1506, 1508, 1509, 1762,
     1669, 1717, 1504, 1505, 1506, 1508, 1509, 1510, 1512, 1525,

     1527, 1528, 1510, 1512, 1525, 1527, 1528, 1794, 1840, 1762,
     1510, 1512, 1525, 1527, 1528, 1529, 1531, 1544, 1545, 1546,
     1529, 1531, 1544, 1545, 1546, 1841, 1840, 1794, 1529, 1531,
     1544, 1545, 1546, 1548, 1549, 1550, 1553, 1554, 1548, 1549,
     1550, 1553, 1554, 1849, 1841, 1855, 1548, 1549, 1550, 1553,
     1554, 1555, 1557, 1558, 1559, 1562, 1555, 1557, 1558, 1559,
     1562, 1860, 1861, 1876, 1555, 1557, 1558, 1559, 1562, 1563,
     1564, 1566, 1567, 1568, 1563, 1564, 1566, 1567, 1568, 1870,
     1880, 1879, 1563, 1564, 1566, 1567, 1568, 1571, 1572, 1573,
     1575, 1576, 1571, 1572, 1573, 1575, 1576, 1578, 1879, 1870,

     1571, 1572, 1573, 1575, 1576, 1577, 1578, 1580, 1581, 1582,
     1577, 1584, 1580, 1581, 1582, 1889, 1584, 1895, 1577, 1901,
     1580, 1581, 1582, 1585, 1584, 1586, 1590, 1592, 1585, 1593,
     1586, 1590, 1592, 1600, 1593, 1604, 1585, 1598, 1586, 1590,
     1592, 1594, 1593, 1596, 1600, 1598, 1594, 1601, 1596, 1904,
     1607, 1638, 1609, 1908, 1594, 1610, 1596, 1609, 1601, 1607,
     1610, 1604, 1611, 1761, 1612, 1609, 1616, 1611, 1610, 1612,
     1654, 1616, 1761, 1638, 1918, 1611, 1890, 1612, 1613, 1616,
     1613, 1921, 1613, 1613, 1613, 1613, 1927, 1613, 1613, 1613,
     1613, 1613, 1654, 1890, 1613, 1613, 1613, 1613, 1613, 1613,

     1613, 1613, 1613, 1613, 1613, 1613, 1613, 1613, 1613, 1613,
     1613, 1613, 1613, 1613, 1627, 1628, 1629, 1630, 1631, 1627,
     1628, 1629, 1630, 1631, 1935, 1891, 1897, 1627, 1628, 1629,
     1630, 1631, 1633, 1634, 1635, 1636, 1637, 1633, 1634, 1635,
     1636, 1637, 1891, 1897, 1939, 1633, 1634, 1635, 1636, 1637,
     1639, 1640, 1641, 1642, 1643, 1639, 1640, 1641, 1642, 1643,
     1947, 1952, 1961, 1639, 1640, 1641, 1642, 1643, 1646, 1647,
     1655, 1656, 1657, 1646, 1647, 1655, 1656, 1657, 1972, 1975,
     1979, 1646, 1647, 1655, 1656, 1657, 1658, 1659, 1662, 1663,
     1670, 1658, 1659, 1662, 1663, 1773, 1785, 1983, 1671, 1658,

     1659, 1662, 1663, 1671, 1672, 1673, 1773, 1785, 1674, 1672,
     1673, 1671, 1670, 1674, 1675, 1677, 1986, 1672, 1673, 1675,
     1677, 1674, 1682, 1786, 1678, 1679, 1680, 1675, 1677, 1678,
     1679, 1680, 1694, 1989, 1786, 1681, 1683, 1678, 1679, 1680,
     1681, 1683, 1684, 1991, 1682, 1685, 1686, 1684, 1681, 1683,
     1685, 1686, 1687, 1787, 1694, 1684, 1689, 1687, 1685, 1686,
     1996, 1689, 1690, 1691, 1787, 1687, 1692, 1690, 1691, 1689,
     1718, 1692, 1693, 1695, 1999, 1690, 1691, 1693, 1695, 1692,
     2007, 1793, 1696, 1697, 1698, 1693, 1695, 1696, 1697, 1698,
     1793, 2013, 1718, 1699, 1702, 1696, 1697, 1698, 1699, 1702,

     1703, 1791, 1790, 1704, 1705, 1703, 1699, 1702, 1704, 1705,
     1706, 2020, 1869, 1703, 1709, 1706, 1704, 1705, 1784, 1709,
     1710, 1869, 1894, 1706, 1720, 1710, 1784, 1709, 1790, 1720,
     1791, 1894, 2029, 1710, 1712, 2033, 1712, 1720, 1712, 1712,
     1712, 1712, 2038, 1712, 1712, 1712, 1712, 1712, 2042, 1712,
     1712, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 1712,
     1712, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 1712,
     1733, 1734, 1741, 1742, 1743, 1733, 1734, 1741, 1742, 1743,
     2046, 2050, 2057, 1733, 1734, 1741, 1742, 1743, 1744, 1745,
     1746, 1747, 1749, 1744, 1745, 1746, 1747, 1749, 2061, 2065,

     2072, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1754, 1755,
     1756, 1750, 1751, 1754, 1755, 1756, 2087, 2092, 2095, 1750,
     1751, 1754, 1755, 1756, 1758, 1759, 1760, 1763, 1764, 1758,
     1759, 1760, 1763, 1764, 2100, 2103, 2108, 1758, 1759, 1760,
     1763, 1764, 1765, 1766, 1767, 1768, 1769, 1765, 1766, 1767,
     1768, 1769, 2111, 2115, 2117, 1765, 1766, 1767, 1768, 1769,
     1770, 1771, 1772, 1774, 1775, 1770, 1771, 1772, 1774, 1775,
     2122, 2125, 2128, 1770, 1771, 1772, 1774, 1775, 1776, 1777,
     1778, 1779, 1780, 1776, 1777, 1778, 1779, 1780, 2133, 2136,
     2139, 1776, 1777, 1778, 1779, 1780, 1782, 1797, 1798, 1799,

     1805, 1782, 1797, 1798, 1799, 1805, 2144, 2149, 2154, 1782,
     1797, 1798, 1799, 1805, 1806, 1807, 1808, 1809, 1812, 1806,
     1807, 1808, 1809, 1812, 2157, 2162, 2166, 1806, 1807, 1808,
     1809, 1812, 1813, 1814, 1815, 1816, 1818, 1813, 1814, 1815,
     1816, 1818, 2168, 2170, 1836, 1813, 1814, 1815, 1816, 1818,
     1819, 1820, 1821, 1822, 1823, 1819, 1820, 1821, 1822, 1836,
     2184, 2192, 1826, 1819, 1820, 1821, 1822, 1826, 1827, 1828,
     2200, 2204, 1829, 1827, 1828, 1826, 1823, 1829, 1830, 1833,
     2209, 1827, 1828, 1830, 1833, 1829, 1842, 2216, 1834, 1835,
     1843, 1830, 1833, 1834, 1835, 1843, 1886, 2220, 2228, 1844,

     1845, 1834, 1835, 1843, 1844, 1845, 1846, 2232, 1842, 1847,
     1850, 1846, 1844, 1845, 1847, 1850, 1851, 2240, 1886, 1846,
     1852, 1851, 1847, 1850, 2248, 1852, 1853, 1854, 2256, 1851,
     1856, 1853, 1854, 1852, 2267, 1856, 1857, 1858, 2274, 1853,
     1854, 1857, 1858, 1856, 2281, 2286, 1859, 1862, 1863, 1857,
     1858, 1859, 1862, 1863, 2289, 2294, 2297, 1864, 1865, 1859,
     1862, 1863, 1864, 1865, 1866, 2302, 2305, 1867, 1868, 1866,
     1864, 1865, 1867, 1868, 1871, 2310, 2315, 1866, 1872, 1871,
     1867, 1868, 2318, 1872, 1873, 1874, 2323, 1871, 1875, 1873,
     1874, 1872, 2328, 1875, 1877, 1878, 2333, 1873, 1874, 1877,

     1878, 1875, 2336, 2341, 1881, 1882, 1883, 1877, 1878, 1881,
     1882, 1883, 2346, 2351, 2355, 1884, 1885, 1881, 1882, 1883,
     1884, 1885, 1887, 2359, 2366, 1888, 1892, 1887, 1884, 1885,
     1888, 1892, 1893, 2384, 2392, 1887, 2400, 1893, 1888, 1892,
     2404, 2412, 2420, 2428, 2436, 1893, 1900, 2444, 1900, 2449,
     1900, 1902, 1902, 2460, 1902, 1903, 2468, 1903, 2475, 1903,
     1905, 2482, 2487, 1905, 1905, 1906, 1906, 2490, 1906, 1907,
     2495, 1907, 2500, 1907, 1909, 1909, 2507, 1909, 1910, 1910,
     2514, 1910, 1911, 2521, 1911, 2528, 1911, 1912, 1912, 2533,
     1912, 1913, 1913, 2538, 1913, 1914, 1914, 2547, 1914, 1915,

     1915, 2561, 1915, 1916, 1916, 2569, 1916, 1917, 2597, 1917,
     2602, 1917, 1919, 1919, 2605, 1919, 1920, 2614, 1920, 2621,
     1920, 1922, 2634, 1479, 1464, 1922, 1923, 1923, 1463, 1923,
     1924, 1924, 1462, 1924, 1925, 1925, 1460, 1925, 1926, 1457,
     1926, 1456, 1926, 1928, 1928, 1455, 1928, 1929, 1929, 1453,
     1929, 1930, 1930, 1452, 1930, 1931, 1931, 1449, 1931, 1932,
     1932, 1448, 1932, 1933, 1933, 1435, 1933, 1934, 1434, 1934,
     1433, 1934, 1936, 1432, 1936, 1429, 1936, 1937, 1937, 1428,
     1937, 1938, 1421, 1938, 1420, 1938, 1940, 1940, 1417, 1940,
     1941, 1941, 1416, 1941, 1942, 1942, 1403, 1942, 1943, 1943,

     1402, 1943, 1944, 1944, 1401, 1944, 1945, 1945, 1400, 1945,
     1946, 1397, 1946, 1396, 1946, 1948, 1948, 1389, 1948, 1949,
     1949, 1388, 1949, 1950, 1950, 1385, 1950, 1951, 1384, 1951,
     1371, 1951, 1953, 1953, 1370, 1953, 1954, 1954, 1369, 1954,
     1955, 1955, 1367, 1955, 1956, 1956, 1364, 1956, 1957, 1957,
     1363, 1957, 1958, 1958, 1360, 1958, 1959, 1959, 1359, 1959,
     1960, 1358, 1960, 1962, 1962, 1356, 1962, 1963, 1963, 1353,
     1963, 1964, 1964, 1352, 1964, 1965, 1965, 1343, 1965, 1966,
     1966, 1342, 1966, 1967, 1967, 1341, 1967, 1968, 1968, 1340,
     1968, 1969, 1969, 1337, 1969, 1970, 1970, 1336, 1970, 1971,

     1329, 1971, 1328, 1971, 1973, 1973, 1325, 1973, 1974, 1324,
     1974, 1308, 1974, 1976, 1295, 1976, 1286, 1976, 1977, 1977,
     1279, 1977, 1978, 1277, 1978, 1272, 1978, 1980, 1270, 1980,
     1269, 1980, 1981, 1981, 1266, 1981, 1982, 1265, 1982, 1264,
     1982, 1984, 1984, 1263, 1984, 1985, 1261, 1985, 1260, 1985,
     1987, 1987, 1259, 1987, 1988, 1258, 1988, 1255, 1988, 1990,
     1990, 1251, 1990, 1992, 1992, 1242, 1992, 1993, 1993, 1241,
     1993, 1994, 1994, 1236, 1994, 1995, 1234, 1995, 1230, 1995,
     1997, 1997, 1226, 1997, 1998, 1225, 1998, 1224, 1998, 2000,
     1223, 2000, 1221, 2000, 2001, 1220, 1219, 1218, 2001, 2002,

     2002, 1215, 2002, 2003, 2003, 1211, 2003, 2004, 2004, 1202,
     2004, 2005, 2005, 1201, 2005, 2006, 2006, 1196, 2006, 2008,
     1194, 2008, 2009, 1190, 2009, 1186, 2009, 2010, 2010, 1185,
     2010, 2011, 2011, 1184, 2011, 2012, 2012, 1183, 2012, 2014,
     2014, 1181, 2014, 2015, 2015, 1180, 2015, 2016, 1179, 2016,
     1178, 2016, 2017, 2017, 1175, 2017, 2018, 2018, 1171, 2018,
     2019, 2019, 1163, 2019, 2021, 2021, 1162, 2021, 2022, 2022,
     1157, 2022, 2023, 1155, 2023, 1150, 2023, 2024, 2024, 1149,
     2024, 2025, 2025, 1144, 2025, 2026, 2026, 1142, 2026, 2027,
     2027, 1138, 2027, 2028, 2028, 1131, 2028, 2030, 1130, 2030,

     1125, 2030, 2031, 2031, 1123, 2031, 2032, 2032, 1119, 2032,
     2034, 1115, 2034, 1114, 2034, 2035, 1113, 2035, 1112, 2035,
     2036, 2036, 1110, 2036, 2037, 2037, 1109, 2037, 2039, 1108,
     2039, 1107, 2039, 2040, 2040, 1104, 2040, 2041, 2041, 1100,
     2041, 2043, 1091, 2043, 1087, 2043, 2044, 2044, 1086, 2044,
     2045, 2045, 1082, 2045, 2047, 1076, 2047, 1071, 2047, 2048,
     2048, 1067, 2048, 2049, 2049, 1066, 2049, 2051, 1065, 2051,
     1063, 2051, 2052, 2052, 1060, 2052, 2053, 2053, 1059, 2053,
     2054, 2054, 1050, 2054, 2055, 2055, 1049, 2055, 2056, 2056,
     1048, 2056, 2058, 1046, 2058, 1043, 2058, 2059, 2059, 1042,

     2059, 2060, 2060, 1035, 2060, 2062, 1031, 2062, 1030, 2062,
     2063, 1029, 2063, 1027, 2063, 2064, 1024, 2064, 1023, 2064,
     2066, 1014, 1013, 1012, 2066, 2067, 1010, 1007, 1006, 2067,
     2068, 1003, 1002, 1001, 2068, 2069, 2069,  999, 2069, 2070,
     2070,  996, 2070, 2071, 2071,  995, 2071, 2073, 2073,  986,
     2073, 2074, 2074,  985, 2074, 2075,  984, 2075, 2076, 2076,
      982, 2076, 2077, 2077,  979, 2077, 2078, 2078,  978, 2078,
     2079,  975, 2079,  974, 2079, 2080, 2080,  973, 2080, 2081,
     2081,  971, 2081, 2082, 2082,  968, 2082, 2083,  967, 2083,
      959, 2083, 2084, 2084,  958, 2084, 2085, 2085,  956, 2085,

     2086, 2086,  954, 2086, 2088, 2088,  951, 2088, 2089, 2089,
      950, 2089, 2090, 2090,  946, 2090, 2091,  945, 2091, 2093,
      944, 2093,  942, 2093, 2094, 2094,  939, 2094, 2096, 2096,
      938, 2096, 2097, 2097,  935, 2097, 2098, 2098,  934, 2098,
     2099,  933, 2099,  931, 2099, 2101,  928, 2101,  927, 2101,
     2102, 2102,  918, 2102, 2104, 2104,  917, 2104, 2105, 2105,
      916, 2105, 2106, 2106,  915, 2106, 2107,  912, 2107,  911,
     2107, 2109, 2109,  904, 2109, 2110,  903, 2110,  900, 2110,
     2112,  899, 2112,  885, 2112, 2113, 2113,  879, 2113, 2114,
      878, 2114,  877, 2114, 2116, 2116,  875, 2116, 2118, 2118,

      873, 2118, 2119, 2119,  871, 2119, 2120, 2120,  865, 2120,
     2121,  864, 2121,  859, 2121, 2123, 2123,  857, 2123, 2124,
      853, 2124,  846, 2124, 2126,  845, 2126,  840, 2126, 2127,
     2127,  838, 2127, 2129, 2129,  834, 2129, 2130, 2130,  830,
     2130, 2131, 2131,  829, 2131, 2132,  823, 2132,  822, 2132,
     2134, 2134,  817, 2134, 2135,  815, 2135,  811, 2135, 2137,
      805, 2137,  804, 2137, 2138, 2138,  799, 2138, 2140, 2140,
      797, 2140, 2141, 2141,  792, 2141, 2142, 2142,  791, 2142,
     2143,  786, 2143,  784, 2143, 2145,  780, 2145,  774, 2145,
     2146, 2146,  773, 2146, 2147, 2147,  768, 2147, 2148, 2148,

      766, 2148, 2150, 2150,  761, 2150, 2151, 2151,  760, 2151,
     2152, 2152,  755, 2152, 2153,  753, 2153,  749, 2153, 2155,
      744, 2155,  743, 2155, 2156, 2156,  738, 2156, 2158, 2158,
      736, 2158, 2159, 2159,  731, 2159, 2160, 2160,  730, 2160,
     2161,  725, 2161,  723, 2161, 2163,  718, 2163,  717, 2163,
     2164,  712, 2164,  710, 2164, 2165,  706, 2165, 2167,  699,
     2167, 2169,  698, 2169,  693, 2169, 2171, 2171,  691, 2171,
     2172, 2172,  687, 2172, 2173, 2173,  683, 2173, 2174,  682,
     2174, 2175, 2175,  681, 2175, 2176, 2176,  680, 2176, 2177,
     2177,  678, 2177, 2178, 2178,  677, 2178, 2179, 2179,  676,

     2179, 2180, 2180,  675, 2180, 2181, 2181,  672, 2181, 2182,
     2182,  668, 2182, 2183, 2183,  652, 2183, 2185,  651, 2185,
     2186,  647, 2186,  640, 2186, 2187, 2187,  639, 2187, 2188,
     2188,  638, 2188, 2189, 2189,  634, 2189, 2190, 2190,  633,
     2190, 2191, 2191,  632, 2191, 2193,  630, 2193,  627, 2193,
     2194,  626, 2194,  623, 2194, 2195, 2195,  622, 2195, 2196,
     2196,  621, 2196, 2197, 2197,  619, 2197, 2198, 2198,  616,
     2198, 2199, 2199,  615, 2199, 2201,  606, 2201,  605, 2201,
     2202, 2202,  604, 2202, 2203, 2203,  602, 2203, 2205,  599,
     2205,  598, 2205, 2206,  595, 2206,  594, 2206, 2207, 2207,

      592, 2207, 2208, 2208,  590, 2208, 2210,  587, 2210,  586,
     2210, 2211, 2211,  583, 2211, 2212, 2212,  582, 2212, 2213,
     2213,  580, 2213, 2214, 2214,  578, 2214, 2215, 2215,  575,
     2215, 2217,  574, 2217,  570, 2217, 2218, 2218,  569, 2218,
     2219, 2219,  567, 2219, 2221,  565, 2221,  562, 2221, 2222,
      561, 2222,  557, 2222, 2223, 2223,  556, 2223, 2224, 2224,
      555, 2224, 2225, 2225,  553, 2225, 2226, 2226,  550, 2226,
     2227, 2227,  549, 2227, 2229,  546, 2229,  545, 2229, 2230,
     2230,  544, 2230, 2231, 2231,  542, 2231, 2233,  539, 2233,
      538, 2233, 2234,  527, 2234,  518, 2234, 2235, 2235,  513,

     2235, 2236, 2236,  512, 2236, 2237, 2237,  509, 2237, 2238,
     2238,  508, 2238, 2239, 2239,  498, 2239, 2241,  497, 2241,
      496, 2241, 2242,  494, 2242,  489, 2242, 2243, 2243,  488,
     2243, 2244, 2244,  483, 2244, 2245, 2245,  481, 2245, 2246,
     2246,  475, 2246, 2247, 2247,  474, 2247, 2249,  469, 2249,
      467, 2249, 2250,  463, 2250,  461, 2250, 2251, 2251,  457,
     2251, 2252, 2252,  456, 2252, 2253, 2253,  451, 2253, 2254,
     2254,  449, 2254, 2255, 2255,  445, 2255, 2257,  444, 2257,
      439, 2257, 2258,  437, 2258,  433, 2258, 2259,  432, 2259,
     2260,  427, 2260, 2261,  425, 2261,  424, 2261, 2262, 2262,

      420, 2262, 2263, 2263,  419, 2263, 2264, 2264,  414, 2264,
     2265, 2265,  412, 2265, 2266, 2266,  407, 2266, 2268, 2268,
      406, 2268, 2269, 2269,  401, 2269, 2270,  399, 2270, 2271,
     2271,  394, 2271, 2272, 2272,  393, 2272, 2273, 2273,  388,
     2273, 2275, 2275,  386, 2275, 2276, 2276,  377, 2276, 2277,
      376, 2277,  375, 2277, 2278, 2278,  370, 2278, 2279, 2279,
      369, 2279, 2280, 2280,  360, 2280, 2282, 2282,  359, 2282,
     2283, 2283,  358, 2283, 2284, 2284,  353, 2284, 2285,  352,
     2285, 2287,  344, 2287,  343, 2287, 2288, 2288,  342, 2288,
     2290, 2290,  341, 2290, 2291, 2291,  339, 2291, 2292, 2292,

      338, 2292, 2293,  337, 2293,  336, 2293, 2295,  333, 2295,
      325, 2295, 2296, 2296,  324, 2296, 2298, 2298,  323, 2298,
     2299, 2299,  322, 2299, 2300, 2300,  321, 2300, 2301,  318,
     2301,  317, 2301, 2303, 2303,  315, 2303, 2304,  310, 2304,
      309, 2304, 2306,  308, 2306,  299, 2306, 2307, 2307,  298,
     2307, 2308, 2308,  296, 2308, 2309, 2309,  291, 2309, 2311,
     2311,  290, 2311, 2312, 2312,  284, 2312, 2313, 2313,  283,
     2313, 2314,  278, 2314, 2316,  276, 2316,  265, 2316, 2317,
     2317,  264, 2317, 2319, 2319,  259, 2319, 2320, 2320,  257,
     2320, 2321, 2321,  246, 2321, 2322,  245, 2322,  244, 2322,

     2324,  239, 2324,  238, 2324, 2325, 2325,  232, 2325, 2326,
     2326,  231, 2326, 2327, 2327,  230, 2327, 2329, 2329,  225,
     2329, 2330, 2330,  224, 2330, 2331, 2331,  219, 2331, 2332,
      217, 2332, 2334,  215, 2334,  214, 2334, 2335, 2335,  213,
     2335, 2337, 2337,  212, 2337, 2338, 2338,  210, 2338, 2339,
     2339,  206, 2339, 2340,  205, 2340,  200, 2340, 2342,  198,
     2342,  194, 2342, 2343, 2343,  193, 2343, 2344, 2344,  192,
     2344, 2345, 2345,  187, 2345, 2347, 2347,  186, 2347, 2348,
     2348,  183, 2348, 2349, 2349,  182, 2349, 2350,  181, 2350,
     2352,  176, 2352,  175, 2352, 2353, 2353,  164, 2353, 2354,

      163, 2354,  158, 2354, 2356, 2356,  156, 2356, 2357, 2357,
      147, 2357, 2358, 2358,  136, 2358, 2360, 2360,  135, 2360,
     2361, 2361,  130, 2361, 2362,  128, 2362,  122, 2362, 2363,
     2363,  121, 2363, 2364, 2364,  116, 2364, 2365, 2365,  114,
     2365, 2367, 2367,  105, 2367, 2368, 2368,  104, 2368, 2369,
      103, 2369,   98, 2369, 2370,   97,   96,   95, 2370, 2371,
     2371,   94, 2371, 2372, 2372,   92, 2372, 2373, 2373,   85,
     2373, 2374,   84, 2374, 2375, 2375,   82, 2375, 2376, 2376,
       77, 2376, 2377, 2377,   76, 2377, 2378,   74, 2378,   70,
     2378, 2379, 2379,   69, 2379, 2380, 2380,   64, 2380, 2381,

     2381,   62, 2381, 2382, 2382,   61, 2382, 2383, 2383,   59,
     2383, 2385,   52, 2385, 2386,   51, 2386,   46, 2386, 2387,
     2387,   44, 2387, 2388, 2388,   43, 2388, 2389, 2389,   40,
     2389, 2390, 2390,   32, 2390, 2391, 2391,   31, 2391, 2393,
       26, 2393,   23, 2393, 2394,   22, 2394,   21, 2394, 2395,
     2395,   19, 2395, 2396, 2396,   18, 2396, 2397, 2397,    9,
     2397, 2398, 2398,    8, 2398, 2399, 2399,    7, 2399, 2401,
        5, 2401,    3, 2401, 2402, 2402,    0, 2402, 2403, 2403,
        0, 2403, 2405,    0, 2405,    0, 2405, 2406,    0, 2406,
        0, 2406, 2407, 2407,    0, 2407, 2408, 2408,    0, 2408,

     2409, 2409,    0, 2409, 2410, 2410,    0, 2410, 2411, 2411,
        0, 2411, 2413,    0, 2413, 2414,    0, 2414,    0, 2414,
     2415, 2415,    0, 2415, 2416, 2416,    0, 2416, 2417, 2417,
        0, 2417, 2418, 2418,    0, 2418, 2419, 2419,    0, 2419,
     2421,    0, 2421,    0, 2421, 2422,    0, 2422,    0, 2422,
     2423, 2423,    0, 2423, 2424, 2424,    0, 2424, 2425, 2425,
        0, 2425, 2426, 2426,    0, 2426, 2427, 2427,    0, 2427,
     2429,    0, 2429, 2430,    0, 2430,    0, 2430, 2431, 2431,
        0, 2431, 2432, 2432,    0, 2432, 2433, 2433,    0, 2433,
     2434, 2434,    0, 2434, 2435, 2435,    0, 2435, 2437,    0,

     2437,    0, 2437, 2438,    0, 2438,    0, 2438, 2439, 2439,
        0, 2439, 2440, 2440,    0, 2440, 2441, 2441,    0, 2441,
     2442, 2442,    0, 2442, 2443, 2443,    0, 2443, 2445,    0,
     2445, 2446,    0, 2446,    0, 2446, 2447, 2447,    0, 2447,
     2448, 2448,    0, 2448, 2450,    0, 2450,    0, 2450, 2451,
     2451,    0, 2451, 2452, 2452,    0, 2452, 2453, 2453,    0,
     2453, 2454,    0, 2454,    0, 2454, 2455, 2455,    0, 2455,
     2456, 2456,    0, 2456, 2457, 2457,    0, 2457, 2458,    0,
     2458,    0, 2458, 2459,    0, 2459,    0, 2459, 2461, 2461,
        0, 2461, 2462, 2462,    0, 2462, 2463, 2463,    0, 2463,

     2464, 2464,    0, 2464, 2465, 2465,    0, 2465, 2466, 2466,
        0, 2466, 2467, 2467,    0, 2467, 2469, 2469,    0, 2469,
     2470, 2470,    0, 2470, 2471,    0, 2471, 2472, 2472,    0,
     2472, 2473, 2473,    0, 2473, 2474, 2474,    0, 2474, 2476,
     2476,    0, 2476, 2477, 2477,    0, 2477, 2478,    0, 2478,
        0, 2478, 2479, 2479,    0, 2479, 2480, 2480,    0, 2480,
     2481, 2481,    0, 2481, 2483, 2483,    0, 2483, 2484, 2484,
        0, 2484, 2485, 2485,    0, 2485, 2486,    0, 2486, 2488,
        0, 2488,    0, 2488, 2489, 2489,    0, 2489, 2491, 2491,
        0, 2491, 2492, 2492,    0, 2492, 2493, 2493,    0, 2493,

     2494,    0, 2494,    0, 2494, 2496,    0, 2496,    0, 2496,
     2497, 2497,    0, 2497, 2498, 2498,    0, 2498, 2499, 2499,
        0, 2499, 2501, 2501,    0, 2501, 2502, 2502,    0, 2502,
     2503,    0, 2503, 2504, 2504,    0, 2504, 2505, 2505,    0,
     2505, 2506, 2506,    0, 2506, 2508, 2508,    0, 2508, 2509,
     2509,    0, 2509, 2510,    0, 2510,    0, 2510, 2511, 2511,
        0, 2511, 2512, 2512,    0, 2512, 2513, 2513,    0, 2513,
     2515, 2515,    0, 2515, 2516, 2516,    0, 2516, 2517,    0,
     2517, 2518, 2518,    0, 2518, 2519, 2519,    0, 2519, 2520,
     2520,    0, 2520, 2522, 2522,    0, 2522, 2523, 2523,    0,

     2523, 2524,    0, 2524,    0, 2524, 2525, 2525,    0, 2525,
     2526, 2526,    0, 2526, 2527, 2527,    0, 2527, 2529, 2529,
        0, 2529, 2530, 2530,    0, 2530, 2531,    0, 2531, 2532,
     2532,    0, 2532, 2534, 2534,    0, 2534, 2535, 2535,    0,
     2535, 2536, 2536,    0, 2536, 2537,    0, 2537,    0, 2537,
     2539,    0, 2539,    0, 2539, 2540, 2540,    0, 2540, 2541,
     2541,    0, 2541, 2542, 2542,    0, 2542, 2543, 2543,    0,
     2543, 2544,    0, 2544,    0, 2544, 2545, 2545,    0, 2545,
     2546,    0, 2546, 2548, 2548,    0, 2548, 2549, 2549,    0,
     2549, 2550, 2550,    0, 2550, 2551,    0, 2551, 2552, 2552,

        0, 2552, 2553, 2553,    0, 2553, 2554, 2554,    0, 2554,
     2555,    0, 2555,    0, 2555, 2556, 2556,    0, 2556, 2557,
     2557,    0, 2557, 2558, 2558,    0, 2558, 2559, 2559,    0,
     2559, 2560, 2560,    0, 2560, 2562,    0, 2562, 2563,    0,
     2563,    0, 2563, 2564, 2564,    0, 2564, 2565, 2565,    0,
     2565, 2566, 2566,    0, 2566, 2567, 2567,    0, 2567, 2568,
     2568,    0, 2568, 2570,    0, 2570,    0, 2570, 2571,    0,
     2571,    0, 2571, 2572, 2572,    0, 2572, 2573, 2573,    0,
     2573, 2574, 2574,    0, 2574, 2575,    0, 2575, 2576, 2576,
        0, 2576, 2577, 2577,    0, 2577, 2578, 2578,    0, 2578,

     2579,    0, 2579,    0, 2579, 2580, 2580,    0, 2580, 2581,
     2581,    0, 2581, 2582, 2582,    0, 2582, 2583,    0, 2583,
     2584, 2584,    0, 2584, 2585, 2585,    0, 2585, 2586, 2586,
        0, 2586, 2587,    0, 2587,    0, 2587, 2588, 2588,    0,
     2588, 2589, 2589,    0, 2589, 2590, 2590,    0, 2590, 2591,
        0, 2591, 2592, 2592,    0, 2592, 2593, 2593,    0, 2593,
     2594, 2594,    0, 2594, 2595, 2595,    0, 2595, 2596, 2596,
        0, 2596, 2598,    0, 2598,    0, 2598, 2599,    0, 2599,
        0, 2599, 2600, 2600,    0, 2600, 2601,    0, 2601, 2603,
     2603,    0, 2603, 2604, 2604,    0, 2604, 2606,    0, 2606,

     2607, 2607,    0, 2607, 2608, 2608,    0, 2608, 2609, 2609,
        0, 2609, 2610, 2610,    0, 2610, 2611, 2611,    0, 2611,
     2612, 2612,    0, 2612, 2613, 2613,    0, 2613, 2615, 2615,
        0, 2615, 2616, 2616,    0, 2616, 2617,    0, 2617, 2618,
     2618,    0, 2618, 2619, 2619,    0, 2619, 2620, 2620,    0,
     2620, 2622, 2622,    0, 2622, 2623, 2623,    0, 2623, 2624,
        0, 2624,    0, 2624, 2625, 2625,    0, 2625, 2626, 2626,
        0, 2626, 2627, 2627,    0, 2627, 2628, 2628,    0, 2628,
     2629, 2629,    0, 2629, 2630, 2630,    0, 2630, 2631, 2631,
        0, 2631, 2632, 2632,    0, 2632, 2633,    0, 2633,    0,

     2633, 2635, 2635,    0, 2635, 2636, 2636,    0, 2636, 2637,
     2637,    0, 2637, 2638, 2638,    0, 2638, 2639, 2639,    0,
     2639, 2640, 2640,    0, 2640, 2641, 2641,    0, 2641, 2642,
     2642,    0, 2642, 2643, 2643,    0, 2643, 2644, 2644,    0,
     2644, 2645, 2645,    0, 2645, 2646, 2646,    0, 2646, 2647,
     2647,    0, 2647, 2648, 2648,    0, 2648, 2649, 2649,    0,
     2649, 2650,    0,    0,    0, 2650, 2651, 2651,    0, 2651,
     2652,    0, 2652,    0, 2652, 2653,    0,    0,    0, 2653,
     2654,    0, 2654, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,

     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899, 1899,
     1899, 1899, 1899
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "get_stmt_type.l"
#line 4 "get_stmt_type.l"
	#include <iostream>
    #include <string>
    //#include "../includes/basic_types.hpp"

    std::size_t line_no = 1;
#line 2828 "get_stmt_type.yy.cc"
#line 2829 "get_stmt_type.yy.cc"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
#define ECHO LexerOutput( yytext, yyleng )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
\
	if ( (int)(result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) LexerError( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
#define YY_DECL int yyFlexLexer::yylex()
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin.rdbuf(std::cin.rdbuf());

		if ( ! yyout )
			yyout.rdbuf(std::cout.rdbuf());

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
#line 56 "get_stmt_type.l"


#line 2964 "get_stmt_type.yy.cc"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1900 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 7384 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 58 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> array_pop\n"; }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 60 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> init\n"; }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 62 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> array_init\n"; }
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 64 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> array_set\n"; }
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 66 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> array_append\n"; }
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 68 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> assign\n"; }
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 70 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> print\n"; }
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 72 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> println\n"; }
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 74 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> readint\n"; }
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 76 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> readfloat\n"; }
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 78 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> readstr\n"; }
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 80 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> while\n"; }
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 82 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> if\n"; }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 84 "get_stmt_type.l"
{ std::cout << line_no << " " << YYText() << " -> else\n"; }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 86 "get_stmt_type.l"

	YY_BREAK
case 16:
/* rule 16 can match eol */
YY_RULE_SETUP
#line 88 "get_stmt_type.l"
{ ++line_no; }
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 90 "get_stmt_type.l"
{
    std::string error_seg(YYText());
    error_seg.reserve(20);
    char c;
    
    while ((c = yyinput()) != 0 && c != EOF)
    {
        if (c == '\n')
        {
            unput(c);
            break;
        }
        error_seg += c;
    }

    std::cout << "invalid syntax at line: " << line_no << " -> " 
    << " \033[1;31m'" << error_seg << "'\033[0m\n";
    error_seg.clear();
}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 110 "get_stmt_type.l"
ECHO;
	YY_BREAK
#line 3130 "get_stmt_type.yy.cc"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin.rdbuf();
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* The contents of this function are C++ specific, so the () macro is not used.
 * This constructor simply maintains backward compatibility.
 * DEPRECATED
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout ):
	yyin(arg_yyin ? arg_yyin->rdbuf() : std::cin.rdbuf()),
	yyout(arg_yyout ? arg_yyout->rdbuf() : std::cout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream& arg_yyin, std::ostream& arg_yyout ):
	yyin(arg_yyin.rdbuf()),
	yyout(arg_yyout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::ctor_common()
{
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = NULL;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	yyfree( yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yyfree( yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream& new_in, std::ostream& new_out )
{
	// was if( new_in )
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );

	// was if( new_out )
	yyout.rdbuf(new_out.rdbuf());
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if( ! new_in ) {
		new_in = &yyin;
	}

	if ( ! new_out ) {
		new_out = &yyout;
	}

	switch_streams(*new_in, *new_out);
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin.eof() || yyin.fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin.get( buf[0] );

	if ( yyin.eof() )
		return 0;

	if ( yyin.bad() )
		return -1;

	return 1;

#else
	(void) yyin.read( buf, max_size );

	if ( yyin.bad() )
		return -1;
	else
		return yyin.gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout.write( buf, size );
}

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
int yyFlexLexer::yy_get_next_buffer()
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    yy_state_type yyFlexLexer::yy_get_previous_state()
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1900 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
{
	int yy_is_jam;
    	char *yy_cp = (yy_c_buf_p);

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1900 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 1899);

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT
    void yyFlexLexer::yyunput( int c, char* yy_bp)
{
	char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = (yy_n_chars) + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
#endif

    int yyFlexLexer::yyinput()
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyFlexLexer::yyrestart( std::istream& input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Delegate to the new version that takes an istream reference.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
void yyFlexLexer::yyrestart( std::istream* input_file )
{
	if( ! input_file ) {
		input_file = &yyin;
	}
	yyrestart( *input_file );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

    void yyFlexLexer::yy_load_buffer_state()
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin.rdbuf(YY_CURRENT_BUFFER_LVALUE->yy_input_file);
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream& file, int size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Delegate creation of buffers to the new version that takes an istream reference.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
	YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	return yy_create_buffer( *file, size );
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream& file )

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file.rdbuf();
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

	b->yy_is_interactive = 0;
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yyFlexLexer::yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
void yyFlexLexer::yyensure_buffer_stack(void)
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

    void yyFlexLexer::yy_push_state( int _new_state )
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_size_t) (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) yyalloc( new_size  );

		else
			(yy_start_stack) = (int *) yyrealloc(
					(void *) (yy_start_stack), new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(_new_state);
}

    void yyFlexLexer::yy_pop_state()
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

    int yyFlexLexer::yy_top_state()
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

void yyFlexLexer::LexerError( const char* msg )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 110 "get_stmt_type.l"



int main(int argc, char** argv)
{
    FlexLexer* lexer = new yyFlexLexer;
    lexer->yylex();
}
